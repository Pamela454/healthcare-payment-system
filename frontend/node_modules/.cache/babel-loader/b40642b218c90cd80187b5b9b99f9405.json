{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js\";\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React from 'react'; //import {Redirect} from \"react-router-dom\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { getDepartments } from \".././actions/currentDepartments.js\"; //import DepartmentsContainer from '../containers/DepartmentsContainer'\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = props => {\n  //let account = props.accounts[props.match.params.id - 1]\n  //do you need a key?, only if iterating \n  //do I need a default balance of 0 when creating a new account? \n  const accountId = props.account.id;\n  console.log(props.account.id);\n\n  const handleClick = e => {\n    //const { accountId } = e.target;\n    console.log(e.target);\n    e.preventDefault();\n    getDepartments(e);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \" Account Name \"), props.account ? ` - ` + props.account.attributes.name : null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" Account Balance \"), props.account ? `$` + props.account.attributes.balance : null), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/accounts/${accountId}/departments`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 45\n    }\n  }, \"View Departments\")));\n};\n\n_c = Account;\nexport default withRouter(connect(null, {\n  getDepartments\n})(Account));\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js"],"names":["Link","connect","React","withRouter","Button","getDepartments","Account","props","accountId","account","id","console","log","handleClick","e","target","preventDefault","attributes","name","balance"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAC1B;AACD;AACA;AACI,QAAMC,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAcC,EAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,OAAN,CAAcC,EAA1B;;AAEA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,MAAd;AACAD,IAAAA,CAAC,CAACE,cAAF;AACAX,IAAAA,cAAc,CAACS,CAAD,CAAd;AACH,GALD;;AAOJ,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAC+BP,KAAK,CAACE,OAAN,GAAgB,KAAD,GAAQF,KAAK,CAACE,OAAN,CAAcQ,UAAd,CAAyBC,IAAhD,GAAuD,IADtF,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,EAEkCX,KAAK,CAACE,OAAN,GAAiB,GAAD,GAAMF,KAAK,CAACE,OAAN,CAAcQ,UAAd,CAAyBE,OAA/C,GAAyD,IAF3F,CADJ,eAKO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMN,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAoC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYL,SAAU,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAApC,CALP,CADD;AAUC,CAxBD;;KAAMF,O;AA4BN,eAAeH,UAAU,CAACF,OAAO,CAAC,IAAD,EAAO;AAAEI,EAAAA;AAAF,CAAP,CAAP,CAAmCC,OAAnC,CAAD,CAAzB","sourcesContent":["import {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport React from 'react'\n//import {Redirect} from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap'\nimport { getDepartments } from \".././actions/currentDepartments.js\"\n//import DepartmentsContainer from '../containers/DepartmentsContainer'\n\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = (props) => {\n\t//let account = props.accounts[props.match.params.id - 1]\n//do you need a key?, only if iterating \n//do I need a default balance of 0 when creating a new account? \n    const accountId = props.account.id\n\t   console.log(props.account.id)\n\n    const handleClick = (e) => {\n        //const { accountId } = e.target;\n        console.log(e.target)\n        e.preventDefault();\n        getDepartments(e)\n    }\n\nreturn (\n\t<div>\n     <h2>\n     \t<label> Account Name </label>{props.account? ` - ` + props.account.attributes.name : null} \n     \t<label> Account Balance </label>{props.account ? `$` + props.account.attributes.balance : null}\n     </h2>\n        <Button onClick={() => handleClick}><Link to={`/accounts/${accountId}/departments`}>View Departments</Link></Button>\n     </div>\n\t)\n\n}\n\n\n\nexport default withRouter(connect(null, { getDepartments } )(Account)); "]},"metadata":{},"sourceType":"module"}