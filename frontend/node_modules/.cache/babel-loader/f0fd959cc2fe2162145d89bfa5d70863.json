{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/index.js\";\nimport React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport history from \"./components/history\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"; //wrapped in provider so has access to store\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\"; //from imported redux library\n\nimport ReduxThunk from \"redux-thunk\"; //asynchronous actions\n\nimport accountReducer from \"./reducers/accountReducer\";\nimport departmentsReducer from \"./reducers/departmentsReducer\";\nimport loginFormReducer from \"./reducers/loginFormReducer\";\nimport signupFormReducer from \"./reducers/signupFormReducer\";\nimport paymentsReducer from \"./reducers/paymentsReducer\"; //manage independent parts of the state. Single reducing function to pass to create store.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducers = combineReducers({\n  accountReducer,\n  departmentsReducer,\n  loginFormReducer,\n  signupFormReducer,\n  paymentsReducer\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //dev tools\n\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(ReduxThunk))); //method provided by redux library\n//asynchronous use of dispatch\n//containers act more like parent components, contain other componenets\n//store - data stored globally. could create in separate file and import.\n//reducer - what to do with store based on certain actions. returns a new version of the store.\n//below grants app access to the store\n//able to dispatch actions throughout the component tree. alerts when change in state.\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 3\n}, this), document.getElementById(\"root\")); //router gives any child access to setting up routes and using links. children all wrapped in router\n//reducer tells what to do with store based on certain actions\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nexport default store;","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/index.js"],"names":["React","history","ReactDOM","Provider","BrowserRouter","Router","App","serviceWorker","createStore","applyMiddleware","compose","combineReducers","ReduxThunk","accountReducer","departmentsReducer","loginFormReducer","signupFormReducer","paymentsReducer","reducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sCAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAAwC;;AACxC,SAASC,aAAa,IAAIC,MAA1B,QAAwC,kBAAxC;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE,C,CAAgF;;AAChF,OAAOC,UAAP,MAAuB,aAAvB,C,CAAsC;;AACtC,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,eAAP,MAA4B,4BAA5B,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGP,eAAe,CAAC;AAC/BE,EAAAA,cAD+B;AAE/BC,EAAAA,kBAF+B;AAG/BC,EAAAA,gBAH+B;AAI/BC,EAAAA,iBAJ+B;AAK/BC,EAAAA;AAL+B,CAAD,CAAhC;AAQA,MAAME,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CX,OAAxE,C,CAAiF;;AAEjF,IAAIY,KAAK,GAAGd,WAAW,CACrBU,QADqB,EAErBC,gBAAgB,CAACV,eAAe,CAACG,UAAD,CAAhB,CAFK,CAAvB,C,CAGG;AACH;AACA;AACA;AACA;AACA;AACA;;AACAV,QAAQ,CAACqB,MAAT,eACE,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAErB,OAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAMEuB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CANF,E,CAQA;AACA;AACA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd;AAEA,eAAeJ,KAAf","sourcesContent":["import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport history from \"./components/history\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\"; //wrapped in provider so has access to store\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware, compose, combineReducers } from \"redux\"; //from imported redux library\nimport ReduxThunk from \"redux-thunk\"; //asynchronous actions\nimport accountReducer from \"./reducers/accountReducer\";\nimport departmentsReducer from \"./reducers/departmentsReducer\";\nimport loginFormReducer from \"./reducers/loginFormReducer\";\nimport signupFormReducer from \"./reducers/signupFormReducer\";\nimport paymentsReducer from \"./reducers/paymentsReducer\";\n\n//manage independent parts of the state. Single reducing function to pass to create store.\nconst reducers = combineReducers({\n  accountReducer,\n  departmentsReducer,\n  loginFormReducer,\n  signupFormReducer,\n  paymentsReducer,\n});\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //dev tools\n\nlet store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(ReduxThunk))\n); //method provided by redux library\n//asynchronous use of dispatch\n//containers act more like parent components, contain other componenets\n//store - data stored globally. could create in separate file and import.\n//reducer - what to do with store based on certain actions. returns a new version of the store.\n//below grants app access to the store\n//able to dispatch actions throughout the component tree. alerts when change in state.\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n//router gives any child access to setting up routes and using links. children all wrapped in router\n//reducer tells what to do with store based on certain actions\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}