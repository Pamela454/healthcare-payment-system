{"ast":null,"code":"export default function accountReducer(state = {\n  accounts: []\n}, action) {\n  switch (action.type) {\n    case 'SET_CURRENT_ACCOUNT':\n      binding.pry;\n      return {\n        account: action.payload\n      };\n\n    case 'ADD_ACCOUNT':\n      return { ...state,\n        account: [...state.account, action.payload]\n      };\n    //only override specific property \n\n    case 'ADD_DEPARTMENT':\n      //at least returns some version of state\n      let account = state.account;\n\n      if (account.id === action.payload.id) {\n        return action.payload;\n      } else {\n        return account;\n      }\n\n    //return {...state, account: account}\n\n    case 'DELETE_TRANSACTION':\n      //at least returns some version of state\n      debugger; //let accountsNext = state.accounts.map(account => {\n\n      if (account.id === action.payload.id) {\n        return action.payload;\n      } else {\n        return account;\n      }\n\n    //})\n    //return {...state, accounts: accountsNext}\n\n    default:\n      return state;\n  }\n} //reducer is a function \n//state as object vs array\n//updates the state based on the action","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/reducers/accountReducer.js"],"names":["accountReducer","state","accounts","action","type","binding","pry","account","payload","id"],"mappings":"AAAA,eAAe,SAASA,cAAT,CAAwBC,KAAK,GAAG;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAhC,EAAgDC,MAAhD,EAAwD;AACtE,UAAQA,MAAM,CAACC,IAAf;AACC,SAAK,qBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR;AACM,aAAO;AAACC,QAAAA,OAAO,EAAEJ,MAAM,CAACK;AAAjB,OAAP;;AACD,SAAK,aAAL;AACC,aAAO,EAAC,GAAGP,KAAJ;AAAWM,QAAAA,OAAO,EAAE,CAAC,GAAGN,KAAK,CAACM,OAAV,EAAmBJ,MAAM,CAACK,OAA1B;AAApB,OAAP;AAA+D;;AAChE,SAAK,gBAAL;AAAuB;AACtB,UAAID,OAAO,GAAGN,KAAK,CAACM,OAApB;;AACC,UAAIA,OAAO,CAACE,EAAR,KAAeN,MAAM,CAACK,OAAP,CAAeC,EAAlC,EAAsC;AACpC,eAAON,MAAM,CAACK,OAAd;AACD,OAFD,MAEO;AACL,eAAOD,OAAP;AACD;;AACF;;AACF,SAAK,oBAAL;AAA2B;AACzB,eADF,CAEE;;AACE,UAAIA,OAAO,CAACE,EAAR,KAAeN,MAAM,CAACK,OAAP,CAAeC,EAAlC,EAAsC;AACpC,eAAON,MAAM,CAACK,OAAd;AACD,OAFD,MAEO;AACL,eAAOD,OAAP;AACD;;AACH;AACA;;AACD;AACC,aAAON,KAAP;AAzBT;AA2BA,C,CAED;AACA;AACA","sourcesContent":["export default function accountReducer(state = {accounts: []}, action) {  \n\tswitch (action.type) {\n\t\tcase 'SET_CURRENT_ACCOUNT':\n    binding.pry\n          return {account: action.payload}\n         case 'ADD_ACCOUNT':\n          return {...state, account: [...state.account, action.payload]} //only override specific property \n         case 'ADD_DEPARTMENT': //at least returns some version of state\n          let account = state.account\n          \tif (account.id === action.payload.id) {\n          \t  return action.payload \n          \t} else {\n          \t  return account \n          \t}\n          //return {...state, account: account}\n        case 'DELETE_TRANSACTION': //at least returns some version of state\n          debugger; \n          //let accountsNext = state.accounts.map(account => {\n            if (account.id === action.payload.id) {\n              return action.payload \n            } else {\n              return account \n            }\n          //})\n          //return {...state, accounts: accountsNext}\n         default:\n          return state\n    }       \n}\n\n//reducer is a function \n//state as object vs array\n//updates the state based on the action \n"]},"metadata":{},"sourceType":"module"}