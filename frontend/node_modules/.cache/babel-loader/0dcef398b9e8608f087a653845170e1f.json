{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { login } from \"../../actions/currentAccount\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentAccount } from \"../../actions/currentAccount\"; //useForm hook? \n//value of form input is determined by the state, state dictated by input field values\n// only use hooks with function components \n\nconst Login = ({\n  login,\n  name,\n  password,\n  setCurrentAccount,\n  history\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: '',\n    password: ''\n  });\n\n  const handleLoginFormChange = (event, target) => {\n    setForm({ ...form,\n      [target]: event.target.value\n    });\n  };\n\n  const handleLoginFormSubmit = event => {\n    event.preventDefault(); //state contains most up to date form data. prevent page refresh \n\n    login(form, history);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"body\", {\n    class: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleLoginFormSubmit,\n    class: \"form-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputname\",\n    class: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 68\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"name\",\n    type: \"text\",\n    class: \"form-control-sm\",\n    id: \"Input1\",\n    name: \"name\",\n    autoComplete: \"on\",\n    value: form.name,\n    onChange: event => handleLoginFormChange(event, \"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group  align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputpassword\",\n    class: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Password: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"password\",\n    type: \"password\",\n    class: \"form-control-sm\",\n    name: \"password\",\n    autoComplete: \"on\",\n    value: form.password,\n    onChange: event => handleLoginFormChange(event, \"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    class: \"btn btn-lg btn-primary btn-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }));\n};\n\n_s(Login, \"NQtI9GfaA9Yk1E3sv7Huoif2wu8=\");\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  login,\n  setCurrentAccount\n})(Login));\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js"],"names":["React","useState","Button","Form","login","withRouter","connect","setCurrentAccount","Login","name","password","history","form","setForm","handleLoginFormChange","event","target","value","handleLoginFormSubmit","preventDefault","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button, Form } from 'react-bootstrap'\nimport { login } from \"../../actions/currentAccount\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentAccount } from \"../../actions/currentAccount\";\n\n//useForm hook? \n//value of form input is determined by the state, state dictated by input field values\n// only use hooks with function components \nconst Login = ({ login, name, password, setCurrentAccount, history }) => {\n  const [form, setForm] = useState({\n    name: '',\n    password: ''\n  });\n\n  const handleLoginFormChange = (event, target) => {\n    setForm({\n      ...form,\n    [target]: event.target.value, \n   });\n  }\n\n  const handleLoginFormSubmit = event => {\n    event.preventDefault() //state contains most up to date form data. prevent page refresh \n    login(form, history); \n  }\n\n\n  return (\n      <div className=\"Login\">\n        <h1 class=\"text-center\">Log In</h1>\n        <body class=\"text-center\">\n         <Form onSubmit={handleLoginFormSubmit} class=\"form-inline\">\n          <div class=\"form-group align-items-center\">\n          <label for=\"inputname\" class=\"form-label\" >Name: </label><br></br>\n          <input\n            placeholder=\"name\"\n            type=\"text\"\n            class=\"form-control-sm\"\n            id=\"Input1\"\n            name=\"name\"\n            autoComplete=\"on\"\n            value={form.name}\n            onChange={(event)=> handleLoginFormChange(event, \"name\")}\n          />\n          </div><br/>\n      <div class=\"form-group  align-items-center\">\n          <label for=\"inputpassword\" class=\"form-label\" >Password: </label><br></br>\n          <input\n            placeholder=\"password\"\n            type=\"password\" \n            class=\"form-control-sm\"\n            name=\"password\"\n            autoComplete=\"on\"\n            value={form.password}\n            onChange={(event)=> handleLoginFormChange(event, \"password\")}\n          />\n          </div><br/>    \n        <Button type=\"submit\" class=\"btn btn-lg btn-primary btn-block\">\n            Log In\n          </Button>          \n          <div>\n          </div>\n          </Form>\n         </body>\n          <div>\n        </div>\n      </div>\n  );\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form \n  };\n};\n\n\nexport default withRouter(connect(mapStateToProps, { login, setCurrentAccount } )(Login));"]},"metadata":{},"sourceType":"module"}