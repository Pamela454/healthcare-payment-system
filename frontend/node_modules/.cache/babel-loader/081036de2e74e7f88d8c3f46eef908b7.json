{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js\",\n    _s = $RefreshSig$();\n\n//import {Link} from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\"; //import {Redirect} from \"react-router-dom\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { getDepartments } from \".././actions/currentDepartments.js\"; //import DepartmentsContainer from '../containers/DepartmentsContainer'\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element\n//returns JSX instead of using render method\n//updates based on prop changes or if parent component rerenders\n//can't use hooks\n//can't use this.state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = props => {\n  _s();\n\n  //let account = props.accounts[props.match.params.id - 1]\n  //do you need a key?, only if iterating\n  //do I need a default balance of 0 when creating a new account?\n  const history = useHistory();\n\n  const handleClick = (e, history) => {\n    //const { accountId } = e.target;\n    //const accountId = props.account.id\n    e.persist();\n    e.preventDefault();\n    props.getDepartments(props.account.id, props.history);\n  }; //add value to button?\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Account Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), props.account ? ` - ` + props.account.attributes.name : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Account Balance \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), props.account ? `$` + props.account.attributes.balance : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          children: \"View Departments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Account, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Account;\nexport default withRouter(connect(null, {\n  getDepartments\n})(Account));\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js"],"names":["connect","React","useHistory","withRouter","Button","getDepartments","Account","props","history","handleClick","e","persist","preventDefault","account","id","attributes","name","balance"],"mappings":";;;AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACvB;AACA;AACA;AAEA,QAAMC,OAAO,GAAGN,UAAU,EAA1B;;AAEA,QAAMO,WAAW,GAAG,CAACC,CAAD,EAAIF,OAAJ,KAAgB;AAChC;AACA;AACAE,IAAAA,CAAC,CAACC,OAAF;AACAD,IAAAA,CAAC,CAACE,cAAF;AACAL,IAAAA,KAAK,CAACF,cAAN,CAAqBE,KAAK,CAACM,OAAN,CAAcC,EAAnC,EAAuCP,KAAK,CAACC,OAA7C;AACH,GAND,CAPuB,CAcvB;;;AACA,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,wBAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKD,KAAK,CAACM,OAAN,GACM,KAAD,GAAQN,KAAK,CAACM,OAAN,CAAcE,UAAd,CAAyBC,IADtC,GAEK,IAJV,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,EAOKT,KAAK,CAACM,OAAN,GACM,GAAD,GAAMN,KAAK,CAACM,OAAN,CAAcE,UAAd,CAAyBE,OADpC,GAEK,IATV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAER,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH,CAnCD;;GAAMH,O;UAKcJ,U;;;KALdI,O;AAqCN,eAAeH,UAAU,CAACH,OAAO,CAAC,IAAD,EAAO;AAAEK,EAAAA;AAAF,CAAP,CAAP,CAAkCC,OAAlC,CAAD,CAAzB","sourcesContent":["//import {Link} from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n//import {Redirect} from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { getDepartments } from \".././actions/currentDepartments.js\";\n//import DepartmentsContainer from '../containers/DepartmentsContainer'\n\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element\n//returns JSX instead of using render method\n//updates based on prop changes or if parent component rerenders\n//can't use hooks\n//can't use this.state\nconst Account = (props) => {\n    //let account = props.accounts[props.match.params.id - 1]\n    //do you need a key?, only if iterating\n    //do I need a default balance of 0 when creating a new account?\n\n    const history = useHistory();\n\n    const handleClick = (e, history) => {\n        //const { accountId } = e.target;\n        //const accountId = props.account.id\n        e.persist();\n        e.preventDefault();\n        props.getDepartments(props.account.id, props.history);\n    };\n    //add value to button?\n    return (\n        <div class=\"container\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h2>\n                        <label> Account Name </label>\n                        {props.account\n                            ? ` - ` + props.account.attributes.name\n                            : null}\n                        <br></br>\n                        <label> Account Balance </label>\n                        {props.account\n                            ? `$` + props.account.attributes.balance\n                            : null}\n                    </h2>\n                    <Button onClick={handleClick}>View Departments</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default withRouter(connect(null, { getDepartments })(Account));\n"]},"metadata":{},"sourceType":"module"}