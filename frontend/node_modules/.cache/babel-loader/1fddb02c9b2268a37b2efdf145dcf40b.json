{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { useState } from 'react'; //import { loadStripe } from \"@stripe/stripe-js\";\n\nimport { connect } from 'react-redux';\nimport { loggedIn } from \"./actions/currentAccount.js\";\nimport { Elements } from '@stripe/react-stripe-js';\nimport { Container } from 'react-bootstrap';\nimport PaymentNew from './components/PaymentNew';\nimport AccountContainer from './containers/AccountContainer';\nimport NavBar from './components/NavBar.js';\nimport DepartmentsContainer from './containers/DepartmentsContainer';\nimport Login from './components/registrations/Login';\nimport Logout from './components/registrations/Logout';\nimport Signup from './components/registrations/Signup';\nimport './App.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  //const [stipePromise,setStripePromise] = useState(() => loadStripe('sk_test_YL9LwX6O769OsJcgA3tH1gjP'))\n  //const stripePromise = useMemo(() => loadStripe('sk_test_YL9LwX6O769OsJcgA3tH1gjP', { stripeAccount }),[stripeAccount],)\n  //const stripePromise = loadStripe('pk_test_tZpOKpVsO8ccsjSLbrnuwwEH');           \n  const currentAccount = localStorage.getItem(\"loggedIn\"); //console.log('current account is: ' + JSON.stringify(this.props.loginFormReducer));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Appclass text-center\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        currentAccount: currentAccount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currentAccount ? `${props.loginFormReducer.attributes.name} is signed in` : \"Not logged in\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/api/v1/login\",\n          render: props => /*#__PURE__*/_jsxDEV(Login, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 64\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/api/v1/signup\",\n          render: props => /*#__PURE__*/_jsxDEV(Signup, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 65\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n          from: \"/logout\",\n          to: \"api/v1/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id\",\n          render: props => {\n            return /*#__PURE__*/_jsxDEV(AccountContainer, { ...props,\n              account: currentAccount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id/departments\",\n          render: props => {\n            return /*#__PURE__*/_jsxDEV(DepartmentsContainer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/accounts/:id/payments/new\",\n          render: props => {\n            return /*#__PURE__*/_jsxDEV(PaymentNew, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 20\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), currentAccount ? /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n}\n\n_c = App;\n;\n\nconst mapStateToProps = state => {\n  //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  loggedIn\n})(App));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","Switch","Route","Redirect","withRouter","useState","connect","loggedIn","Elements","Container","PaymentNew","AccountContainer","NavBar","DepartmentsContainer","Login","Logout","Signup","App","props","currentAccount","localStorage","getItem","loginFormReducer","attributes","name","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component }  from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { useState } from 'react'\n//import { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux'\nimport { loggedIn } from \"./actions/currentAccount.js\"\nimport {Elements} from '@stripe/react-stripe-js';\nimport { Container } from 'react-bootstrap'\nimport PaymentNew from './components/PaymentNew'\nimport AccountContainer from './containers/AccountContainer'\nimport NavBar from './components/NavBar.js'\nimport DepartmentsContainer from './containers/DepartmentsContainer'\nimport Login from './components/registrations/Login'\nimport Logout from './components/registrations/Logout'\nimport Signup from './components/registrations/Signup'\nimport './App.scss'\n\nfunction App(props) {\n        //const [stipePromise,setStripePromise] = useState(() => loadStripe('sk_test_YL9LwX6O769OsJcgA3tH1gjP'))\n        //const stripePromise = useMemo(() => loadStripe('sk_test_YL9LwX6O769OsJcgA3tH1gjP', { stripeAccount }),[stripeAccount],)\n        //const stripePromise = loadStripe('pk_test_tZpOKpVsO8ccsjSLbrnuwwEH');           \n        const currentAccount = localStorage.getItem(\"loggedIn\");\n        //console.log('current account is: ' + JSON.stringify(this.props.loginFormReducer));\n  return (\n   <div className = \"Appclass text-center\"> \n    <Container>\n        {/*<Elements stripe={stripePromise} > */}  \n        <NavBar currentAccount={currentAccount} />\n          <h2>{ currentAccount ? `${props.loginFormReducer.attributes.name} is signed in` \n            : \"Not logged in\" } </h2> \n        <Switch>   \n          <Route exact path='/api/v1/login' render={props => ( <Login {...props}/>)}/>\n          <Route exact path='/api/v1/signup' render={props => ( <Signup {...props}/>)}/>\n          <Redirect from=\"/logout\" to=\"api/v1/login\" />\n          <Route exact path='/accounts/:id' render={props => {\n            return <AccountContainer {...props} account={currentAccount}/>\n          } }/>\n          <Route exact path='/accounts/:id/departments' render={props => {\n            return <DepartmentsContainer/>\n          } }/>\n          <Route exact path='/accounts/:id/payments/new' render={props => {\n            return <PaymentNew/>\n          } }/>\n        </Switch>\n      {currentAccount ? <Logout /> : null}\n    {/* </Elements> */}\n  </Container>\n </div>\n );\n};\n\nconst mapStateToProps = (state) => { //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}\n\n\nexport default withRouter(\n  connect(mapStateToProps, { loggedIn })(App)\n  );  "]},"metadata":{},"sourceType":"module"}