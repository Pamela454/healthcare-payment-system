{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/CheckoutWithStripe.js\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout'; // sample function defined to compute total quantity of cart\n\nfunction computeQuantity(cart) {\n  return cart.reduce((count, itemInCart) => count + itemInCart.quantity, 0);\n} // similar functions can be defined to compute total price, email of the user, etc.\n\n\nclass CheckoutWithStripe extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onToken = res => {\n      fetch('/save-stripe-token', {\n        method: 'POST',\n        body: JSON.stringify(token)\n      }).then(res => {\n        res.json().then(data => {\n          console.log(`Payment token generated, ${data.name}`);\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(StripeCheckout, {\n      amount: \"10.00\",\n      name: \"STRIPE_INTEGRATION\" // functions defined above can be used to add more information while making the API call.\n      // description={`Order of ${computeQuantity(cart)} items!`}\n      ,\n      image: \"LINKTOIMAGE\",\n      stripeKey: \"PUBLISHABLE_STRIPE_KEY\",\n      currency: \"INR\",\n      email: \"USER_EMAIL\",\n      token: this.onToken,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default CheckoutWithStripe;","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/CheckoutWithStripe.js"],"names":["React","StripeCheckout","computeQuantity","cart","reduce","count","itemInCart","quantity","CheckoutWithStripe","Component","onToken","res","fetch","method","body","JSON","stringify","token","then","json","data","console","log","name","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B,C,CAEA;;AACA,SAASC,eAAT,CAAyBC,IAAzB,EAA+B;AAC3B,SAAOA,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,UAAR,KAAuBD,KAAK,GAAGC,UAAU,CAACC,QAAtD,EAAgE,CAAhE,CAAP;AACH,C,CACD;;;AAEA,MAAMC,kBAAN,SAAiCR,KAAK,CAACS,SAAvC,CAAiD;AAAA;AAAA;;AAAA,SAC7CC,OAD6C,GAClCC,GAAD,IAAS;AACfC,MAAAA,KAAK,CAAC,oBAAD,EAAuB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,KAAf;AAFkB,OAAvB,CAAL,CAGGC,IAHH,CAGQP,GAAG,IAAI;AACXA,QAAAA,GAAG,CAACQ,IAAJ,GAAWD,IAAX,CAAgBE,IAAI,IAAI;AACpBC,UAAAA,OAAO,CAACC,GAAR,CAAa,4BAA2BF,IAAI,CAACG,IAAK,EAAlD;AACH,SAFD;AAGH,OAPD;AAQH,KAV4C;AAAA;;AAY7CC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,cAAD;AACI,MAAA,MAAM,EAAG,OADb;AAEI,MAAA,IAAI,EAAC,oBAFT,CAGI;AACA;AAJJ;AAKI,MAAA,KAAK,EAAC,aALV;AAMI,MAAA,SAAS,EAAC,wBANd;AAOI,MAAA,QAAQ,EAAC,KAPb;AAQI,MAAA,KAAK,EAAC,YARV;AASI,MAAA,KAAK,EAAE,KAAKd,OAThB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAYH;;AAzB4C;;AA4BjD,eAAeF,kBAAf","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\n\n// sample function defined to compute total quantity of cart\nfunction computeQuantity(cart) {\n    return cart.reduce((count, itemInCart) => count + itemInCart.quantity, 0);\n}\n// similar functions can be defined to compute total price, email of the user, etc.\n\nclass CheckoutWithStripe extends React.Component {\n    onToken = (res) => {\n        fetch('/save-stripe-token', {\n            method: 'POST',\n            body: JSON.stringify(token),\n        }).then(res => {\n            res.json().then(data => {\n                console.log(`Payment token generated, ${data.name}`)\n            })\n        })\n    };\n\n    render() {\n        return (\n            <StripeCheckout\n                amount = '10.00'\n                name=\"STRIPE_INTEGRATION\"\n                // functions defined above can be used to add more information while making the API call.\n                // description={`Order of ${computeQuantity(cart)} items!`}\n                image='LINKTOIMAGE'\n                stripeKey=\"PUBLISHABLE_STRIPE_KEY\"\n                currency=\"INR\"\n                email='USER_EMAIL'\n                token={this.onToken}/>          \n        );\n    }\n}\n\nexport default CheckoutWithStripe"]},"metadata":{},"sourceType":"module"}