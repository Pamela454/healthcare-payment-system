{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route, useLocation, NavLink\n/*, withRouter */\n} from 'react-router-dom';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\nconst link = {\n  width: '100px',\n  padding: '12px',\n  margin: '0 6px 6px',\n  background: 'blue',\n  textDecoration: 'none',\n  color: 'white'\n};\n\nconst Navbar = () => /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(NavLink, {\n  to: \"/\"\n  /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n  ,\n  exact: true\n  /* add styling to Navlink */\n  ,\n  style: link\n  /* add prop for activeStyle */\n  ,\n  activeStyle: {\n    background: 'darkblue'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }\n}, \"Home\"), /*#__PURE__*/React.createElement(NavLink, {\n  to: \"/about\",\n  exact: true,\n  style: link,\n  activeStyle: {\n    background: 'darkblue'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }\n}, \"About\"), /*#__PURE__*/React.createElement(NavLink, {\n  to: \"/login\",\n  exact: true,\n  style: link,\n  activeStyle: {\n    background: 'darkblue'\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }\n}, \"Login\"));\n\n_c = Navbar;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.loginStatus = () => {\n      axios.get('http://localhost:3001/api/v1/is_logged_in', //converts response to JSON automatically \n      {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response);\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => console.log('api errors:', error));\n    };\n\n    this.handleLogin = data => {\n      this.setState({\n        isLoggedIn: true,\n        account: data.account\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        account: {}\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      account: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus();\n  } //axios has feature to protect against cross site forgery \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/api/v1/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"*\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NoMatch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }))));\n  }\n\n}\n\nfunction NoMatch() {\n  _s();\n\n  let location = useLocation();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"No match for \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 22\n    }\n  }, location.pathname)));\n}\n\n_s(NoMatch, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = NoMatch;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"NoMatch\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","Redirect","axios","BrowserRouter","Switch","Route","useLocation","NavLink","Login","Signup","link","width","padding","margin","background","textDecoration","color","Navbar","App","constructor","props","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","catch","error","console","log","setState","isLoggedIn","account","state","componentDidMount","render","NoMatch","location","pathname"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport axios from 'axios'\nimport {BrowserRouter, Switch, Route, useLocation, NavLink /*, withRouter */} from 'react-router-dom'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\n\nconst link = {\n  width: '100px',\n  padding: '12px',\n  margin: '0 6px 6px',\n  background: 'blue',\n  textDecoration: 'none',\n  color: 'white',\n}\n \n\nconst Navbar = () =>\n  <div>\n    <NavLink\n      to=\"/\"\n      /* set exact so it knows to only set activeStyle when route is deeply equal to link */\n      exact\n      /* add styling to Navlink */\n      style={link}\n      /* add prop for activeStyle */\n      activeStyle={{\n        background: 'darkblue'\n      }}\n    >Home</NavLink>\n    <NavLink\n      to=\"/about\"\n      exact\n      style={link}\n      activeStyle={{\n        background: 'darkblue'\n      }}\n    >About</NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={link}\n      activeStyle={{\n        background: 'darkblue'\n      }}\n    >Login</NavLink>\n  </div>;\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      isLoggedIn: false,\n      account: {}\n     };\n  }\n\n  componentDidMount() {\n    this.loginStatus()\n  }\n\n//axios has feature to protect against cross site forgery \n  loginStatus = () => {\n    axios.get('http://localhost:3001/api/v1/is_logged_in',  //converts response to JSON automatically \n      {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        this.handleLogin(response)\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  }\n\n  handleLogin = (data) => {\n    this.setState({\n      isLoggedIn: true,\n      account: data.account\n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n    isLoggedIn: false,\n    account: {}\n    })\n  }\n\n  render() {\n    return (\n       <BrowserRouter>\n          <Switch>\n            <Navbar />\n            <Route exact path='/api/v1/signup' render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn} />\n              )}/>\n            <Route exact path='/api/v1/login' render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}  />\n              )} />\n            <Route exact path=\"/\">\n                <Redirect to=\"/api/v1/login\"/>\n            </Route>\n            <Route path=\"*\">\n              <NoMatch />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n    );\n  }\n}\n\nfunction NoMatch() {\n  let location = useLocation();\n\n  return (\n    <div>\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}