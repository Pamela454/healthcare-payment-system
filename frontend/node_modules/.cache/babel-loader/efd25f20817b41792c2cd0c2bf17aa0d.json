{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'; //wrapped in provider so has access to store\n\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'; //from imported redux library\n\nimport ReduxThunk from 'redux-thunk'; //asynchronous actions \n\nimport accountReducer from './reducers/accountReducer';\nimport loginFormReducer from './reducers/loginFormReducer';\nimport signupFormReducer from './reducers/signupFormReducer'; //manage independent parts of the state. Single reducing function to pass to create store. \n\nconst reducers = combineReducers({\n  accountReducer,\n  departmentsReducer,\n  loginFormReducer,\n  signupFormReducer\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //dev tools\n\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(ReduxThunk))); //method provided by redux library \n//asynchronous use of dispatch\n//containers act more like parent components, contain other componenets\n//store - data stored globally. could create in separate file and import. \n//reducer - what to do with store based on certain actions. returns a new version of the store. \n//below grants app access to the store \n//able to dispatch actions throughout the component tree. alerts when change in state. \n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(BrowserRouter, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n}))), document.getElementById('root')); //router gives any child access to setting up routes and using links. children all wrapped in router\n//reducer tells what to do with store based on certain actions \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();\nexport default store;","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/index.js"],"names":["React","ReactDOM","Provider","BrowserRouter","App","serviceWorker","createStore","applyMiddleware","compose","combineReducers","ReduxThunk","accountReducer","loginFormReducer","signupFormReducer","reducers","departmentsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAAuC;;AACvC,SAASC,aAAT,QAA6B,kBAA7B;AACA,OAAO,kCAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,EAA+CC,eAA/C,QAAqE,OAArE,C,CAA6E;;AAC7E,OAAOC,UAAP,MAAuB,aAAvB,C,CAAqC;;AACrC,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B,C,CAEA;;AACA,MAAMC,QAAQ,GAAGL,eAAe,CAAC;AAC/BE,EAAAA,cAD+B;AAE/BI,EAAAA,kBAF+B;AAG/BH,EAAAA,gBAH+B;AAI/BC,EAAAA;AAJ+B,CAAD,CAAhC;AAQA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAxE,C,CAAkF;;AAElF,IAAIW,KAAK,GAAGb,WAAW,CAACQ,QAAD,EAAWE,gBAAgB,CAACT,eAAe,CAACG,UAAD,CAAhB,CAA3B,CAAvB,C,CAAiF;AACjF;AACA;AACA;AACA;AACA;AACA;;AACAT,QAAQ,CAACmB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADE,CADA,CADJ,EAMCE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND,E,CAOA;AACA;AACA;AACA;AACA;;AACAjB,aAAa,CAACkB,UAAd;AAEA,eAAeJ,KAAf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux' //wrapped in provider so has access to store\nimport { BrowserRouter} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose, combineReducers} from 'redux' //from imported redux library\nimport ReduxThunk from 'redux-thunk' //asynchronous actions \nimport accountReducer from './reducers/accountReducer'\nimport loginFormReducer from './reducers/loginFormReducer'\nimport signupFormReducer from './reducers/signupFormReducer'\n\n//manage independent parts of the state. Single reducing function to pass to create store. \nconst reducers = combineReducers({\n  accountReducer,\n  departmentsReducer,\n  loginFormReducer,\n  signupFormReducer\n});\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;  //dev tools\n\nlet store = createStore(reducers, composeEnhancers(applyMiddleware(ReduxThunk))) //method provided by redux library \n//asynchronous use of dispatch\n//containers act more like parent components, contain other componenets\n//store - data stored globally. could create in separate file and import. \n//reducer - what to do with store based on certain actions. returns a new version of the store. \n//below grants app access to the store \n//able to dispatch actions throughout the component tree. alerts when change in state. \nReactDOM.render(\n    <Provider store={store}> \n    <BrowserRouter> \n\t\t<App />\n\t</BrowserRouter>\n\t</Provider>, \n\tdocument.getElementById('root'));\n//router gives any child access to setting up routes and using links. children all wrapped in router\n//reducer tells what to do with store based on certain actions \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nexport default store \n"]},"metadata":{},"sourceType":"module"}