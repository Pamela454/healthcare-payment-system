{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { login } from \"../../actions/currentAccount\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentAccount } from \"../../actions/currentAccount\"; //data handled by component\n//useForm hook?\n//value of form input is determined by the state, state dictated by input field values\n// only use hooks with function components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  login,\n  name,\n  password,\n  setCurrentAccount,\n  history\n}) => {\n  _s();\n\n  const [form, setForm] = useState({\n    name: \"\",\n    password: \"\"\n  });\n\n  const handleLoginFormChange = (event, target) => {\n    setForm({ ...form,\n      [target]: event.target.value\n    });\n  };\n\n  const handleLoginFormSubmit = event => {\n    event.preventDefault(); //state contains most up to date form data. prevent page refresh\n\n    login(form, history);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n      className: \"text-center\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleLoginFormSubmit,\n        className: \"form-inline\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputname\",\n            className: \"form-label\",\n            children: [\"Name:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"name\",\n            type: \"text\",\n            className: \"form-control-sm\",\n            id: \"Input1\",\n            name: \"name\",\n            autoComplete: \"on\",\n            value: form.name,\n            onChange: event => handleLoginFormChange(event, \"name\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group  align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"inputpassword\",\n            className: \"form-label\",\n            children: [\"Password:\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            placeholder: \"password\",\n            type: \"password\",\n            className: \"form-control-sm\",\n            name: \"password\",\n            autoComplete: \"on\",\n            value: form.password,\n            onChange: event => handleLoginFormChange(event, \"password\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-outline-primary\",\n          children: \"Log In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"kbMlMvPYn5gPMIjfZN+3GAkqQog=\");\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  login,\n  setCurrentAccount\n})(Login));\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js"],"names":["React","useState","Form","login","withRouter","connect","setCurrentAccount","Login","name","password","history","form","setForm","handleLoginFormChange","event","target","value","handleLoginFormSubmit","preventDefault","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { login } from \"../../actions/currentAccount\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentAccount } from \"../../actions/currentAccount\";\n//data handled by component\n//useForm hook?\n//value of form input is determined by the state, state dictated by input field values\n// only use hooks with function components\nconst Login = ({ login, name, password, setCurrentAccount, history }) => {\n  const [form, setForm] = useState({\n    name: \"\",\n    password: \"\",\n  });\n\n  const handleLoginFormChange = (event, target) => {\n    setForm({\n      ...form,\n      [target]: event.target.value,\n    });\n  };\n\n  const handleLoginFormSubmit = (event) => {\n    event.preventDefault(); //state contains most up to date form data. prevent page refresh\n    login(form, history);\n  };\n\n  return (\n    <div className=\"Login\">\n      <h1 className=\"text-center\">Log In</h1>\n      <body className=\"text-center\">\n        <Form onSubmit={handleLoginFormSubmit} className=\"form-inline\">\n          <div className=\"form-group align-items-center\">\n            <label for=\"inputname\" className=\"form-label\">\n              Name:{\" \"}\n            </label>\n            <br></br>\n            <input\n              placeholder=\"name\"\n              type=\"text\"\n              className=\"form-control-sm\"\n              id=\"Input1\"\n              name=\"name\"\n              autoComplete=\"on\"\n              value={form.name}\n              onChange={(event) => handleLoginFormChange(event, \"name\")}\n            />\n          </div>\n          <br />\n          <div className=\"form-group  align-items-center\">\n            <label for=\"inputpassword\" className=\"form-label\">\n              Password:{\" \"}\n            </label>\n            <br></br>\n            <input\n              placeholder=\"password\"\n              type=\"password\"\n              className=\"form-control-sm\"\n              name=\"password\"\n              autoComplete=\"on\"\n              value={form.password}\n              onChange={(event) => handleLoginFormChange(event, \"password\")}\n            />\n          </div>\n          <br />\n          <button type=\"submit\" className=\"btn btn-outline-primary\">\n            Log In\n          </button>\n          <div></div>\n        </Form>\n      </body>\n      <div></div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    form: state.form,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, { login, setCurrentAccount })(Login)\n);\n"]},"metadata":{},"sourceType":"module"}