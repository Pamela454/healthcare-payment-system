{"ast":null,"code":"//action creators\nexport const setCurrentAccount = account => {\n  console.log(account);\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    //should this be add account?\n    payload: account\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\"\n  };\n}; //type and payload property\n//action creator, function that returns an action\n//thunk allows return of function instead of object. Function receives dispatch function and can dispatch multiple actions.\n//needs to be revised\n\nexport const getAccount = (data, history) => {\n  //a thunk\n  return dispatch => {\n    console.log(data.attributes);\n    return fetch(`http://localhost:3001/api/v1/accounts/${data.relationships.account.data.id}`, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify()\n    }).then(res => res.json()).then(account => {\n      if (account.error) {\n        console.log(account);\n        alert(\"error\");\n      } else {\n        console.log(account.data);\n        localStorage.setItem(\"loggedIn\", true); //can only set string, JSON.stringify to convert\n\n        dispatch(setCurrentAccount(account.data));\n        history.push(`/accounts/${account.data.id}`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const login = (form, history) => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    }).then(res => res.json()).then(account => {\n      console.log(account);\n\n      if (account.error || account === null || account === undefined) {\n        console.log(\"no\");\n      } else {\n        console.log(\"yes\");\n        console.log(account.data);\n        localStorage.setItem(\"loggedIn\", true);\n        dispatch(setCurrentAccount(account.data));\n        history.push(`/accounts/${account.data.id}`);\n      }\n    }).catch(console.log);\n  };\n}; //should we be using async/await?\n\nexport const signup = (form, history) => {\n  return dispatch => {\n    console.log();\n    return fetch(\"http://localhost:3001/api/v1/signup\", {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    }).then(res => res.json()) //parse JSON\n    .then(account => {\n      console.log(account);\n\n      if (account.error) {\n        console.log(\"no\");\n      } else {\n        localStorage.setItem(\"loggedIn\", true);\n        dispatch(setCurrentAccount(account.data));\n        history.push(`/accounts/${account.data.id}`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentAccount.js"],"names":["setCurrentAccount","account","console","log","type","payload","logout","getAccount","data","history","dispatch","attributes","fetch","relationships","id","method","credentials","headers","body","JSON","stringify","then","res","json","error","alert","localStorage","setItem","push","catch","login","form","undefined","signup"],"mappings":"AAAA;AAEA,OAAO,MAAMA,iBAAiB,GAAIC,OAAD,IAAa;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO;AACLG,IAAAA,IAAI,EAAE,qBADD;AACwB;AAC7BC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMK,MAAM,GAAG,MAAM;AAC1B,SAAO;AACLF,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM,C,CAMP;AACA;AACA;AACA;;AACA,OAAO,MAAMG,UAAU,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC3C;AACA,SAAQC,QAAD,IAAc;AACnBR,IAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAACG,UAAjB;AACA,WAAOC,KAAK,CACT,yCAAwCJ,IAAI,CAACK,aAAL,CAAmBZ,OAAnB,CAA2BO,IAA3B,CAAgCM,EAAG,EADlE,EAEV;AACEC,MAAAA,MAAM,EAAE,KADV;AAEEC,MAAAA,WAAW,EAAE,aAFf;AAGEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AANR,KAFU,CAAL,CAWJC,IAXI,CAWEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXV,EAYJF,IAZI,CAYEpB,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACuB,KAAZ,EAAmB;AACjBtB,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAwB,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAHD,MAGO;AACLvB,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACO,IAApB;AACAkB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC,EAFK,CAEmC;;AACxCjB,QAAAA,QAAQ,CAACV,iBAAiB,CAACC,OAAO,CAACO,IAAT,CAAlB,CAAR;AACAC,QAAAA,OAAO,CAACmB,IAAR,CAAc,aAAY3B,OAAO,CAACO,IAAR,CAAaM,EAAG,EAA1C;AACD;AACF,KAtBI,EAuBJe,KAvBI,CAuBE3B,OAAO,CAACC,GAvBV,CAAP;AAwBD,GA1BD;AA2BD,CA7BM;AA+BP,OAAO,MAAM2B,KAAK,GAAG,CAACC,IAAD,EAAOtB,OAAP,KAAmB;AACtC,SAAQC,QAAD,IAAc;AACnB,WAAOE,KAAK,CAAC,oCAAD,EAAuC;AACjDG,MAAAA,MAAM,EAAE,MADyC;AAEjDC,MAAAA,WAAW,EAAE,aAFoC;AAGjDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHwC;AAMjDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,IAAf;AAN2C,KAAvC,CAAL,CAQJV,IARI,CAQEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARV,EASJF,IATI,CASEpB,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAIA,OAAO,CAACuB,KAAR,IAAiBvB,OAAO,KAAK,IAA7B,IAAqCA,OAAO,KAAK+B,SAArD,EAAgE;AAC9D9B,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACO,IAApB;AACAkB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACAjB,QAAAA,QAAQ,CAACV,iBAAiB,CAACC,OAAO,CAACO,IAAT,CAAlB,CAAR;AACAC,QAAAA,OAAO,CAACmB,IAAR,CAAc,aAAY3B,OAAO,CAACO,IAAR,CAAaM,EAAG,EAA1C;AACD;AACF,KApBI,EAqBJe,KArBI,CAqBE3B,OAAO,CAACC,GArBV,CAAP;AAsBD,GAvBD;AAwBD,CAzBM,C,CA2BP;;AACA,OAAO,MAAM8B,MAAM,GAAG,CAACF,IAAD,EAAOtB,OAAP,KAAmB;AACvC,SAAQC,QAAD,IAAc;AACnBR,IAAAA,OAAO,CAACC,GAAR;AACA,WAAOS,KAAK,CAAC,qCAAD,EAAwC;AAClDG,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,WAAW,EAAE,aAFqC;AAGlDC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHyC;AAMlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,IAAf;AAN4C,KAAxC,CAAL,CAQJV,IARI,CAQEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARV,EAQsB;AARtB,KASJF,IATI,CASEpB,OAAD,IAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAIA,OAAO,CAACuB,KAAZ,EAAmB;AACjBtB,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,OAFD,MAEO;AACLuB,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiC,IAAjC;AACAjB,QAAAA,QAAQ,CAACV,iBAAiB,CAACC,OAAO,CAACO,IAAT,CAAlB,CAAR;AACAC,QAAAA,OAAO,CAACmB,IAAR,CAAc,aAAY3B,OAAO,CAACO,IAAR,CAAaM,EAAG,EAA1C;AACD;AACF,KAlBI,EAmBJe,KAnBI,CAmBE3B,OAAO,CAACC,GAnBV,CAAP;AAoBD,GAtBD;AAuBD,CAxBM","sourcesContent":["//action creators\n\nexport const setCurrentAccount = (account) => {\n  console.log(account);\n  return {\n    type: \"SET_CURRENT_ACCOUNT\", //should this be add account?\n    payload: account,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\",\n  };\n};\n\n//type and payload property\n//action creator, function that returns an action\n//thunk allows return of function instead of object. Function receives dispatch function and can dispatch multiple actions.\n//needs to be revised\nexport const getAccount = (data, history) => {\n  //a thunk\n  return (dispatch) => {\n    console.log(data.attributes);\n    return fetch(\n      `http://localhost:3001/api/v1/accounts/${data.relationships.account.data.id}`,\n      {\n        method: \"GET\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(),\n      }\n    )\n      .then((res) => res.json())\n      .then((account) => {\n        if (account.error) {\n          console.log(account);\n          alert(\"error\");\n        } else {\n          console.log(account.data);\n          localStorage.setItem(\"loggedIn\", true); //can only set string, JSON.stringify to convert\n          dispatch(setCurrentAccount(account.data));\n          history.push(`/accounts/${account.data.id}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const login = (form, history) => {\n  return (dispatch) => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(form),\n    })\n      .then((res) => res.json())\n      .then((account) => {\n        console.log(account);\n        if (account.error || account === null || account === undefined) {\n          console.log(\"no\");\n        } else {\n          console.log(\"yes\");\n          console.log(account.data);\n          localStorage.setItem(\"loggedIn\", true);\n          dispatch(setCurrentAccount(account.data));\n          history.push(`/accounts/${account.data.id}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\n//should we be using async/await?\nexport const signup = (form, history) => {\n  return (dispatch) => {\n    console.log();\n    return fetch(\"http://localhost:3001/api/v1/signup\", {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(form),\n    })\n      .then((res) => res.json()) //parse JSON\n      .then((account) => {\n        console.log(account);\n        if (account.error) {\n          console.log(\"no\");\n        } else {\n          localStorage.setItem(\"loggedIn\", true);\n          dispatch(setCurrentAccount(account.data));\n          history.push(`/accounts/${account.data.id}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}