{"ast":null,"code":"export const setDepartments = departments => {\n  console.log(departments);\n  return {\n    type: \"GET_DEPARTMENTS\",\n    departments\n  };\n};\nexport const getDepartments = (accountId, history) => {\n  return dispatch => {\n    console.log(accountId);\n    console.log(history);\n    fetch(`http://localhost:3001/api/v1/accounts/${accountId}/departments`, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify()\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n\n      if (response.error || response === null || response === undefined) {\n        console.log(\"no\");\n      } else {\n        console.log(\"yes\");\n        console.log(response);\n        dispatch(setDepartments(response.data));\n        history.push(`/accounts/${accountId}/departments`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const newDepartment = (department, accountId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(department)\n    }).then(response => response.json()).then(account => dispatch({\n      type: \"ADD_DEPARTMENT\",\n      payload: account\n    }));\n  };\n};\nexport const deleteDepartment = (departmentId, accountId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(account => dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: account\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentDepartments.js"],"names":["setDepartments","departments","console","log","type","getDepartments","accountId","history","dispatch","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","response","error","undefined","data","push","catch","newDepartment","department","account","payload","deleteDepartment","departmentId"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,WAAD,IAAiB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,SAAO;AACNG,IAAAA,IAAI,EAAE,iBADA;AAENH,IAAAA;AAFM,GAAP;AAIA,CANM;AAQP,OAAO,MAAMI,cAAc,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACrD,SAAQC,QAAD,IAAc;AACpBN,IAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAE,IAAAA,KAAK,CACH,yCAAwCH,SAAU,cAD/C,EAEJ;AACCI,MAAAA,MAAM,EAAE,KADT;AAECC,MAAAA,WAAW,EAAE,aAFd;AAGCC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAHV;AAMCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AANP,KAFI,CAAL,CAWEC,IAXF,CAWQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXhB,EAYEF,IAZF,CAYQG,QAAD,IAAc;AACnBjB,MAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;;AACA,UACCA,QAAQ,CAACC,KAAT,IACAD,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAKE,SAHd,EAIE;AACDnB,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAND,MAMO;AACND,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYgB,QAAZ;AACAX,QAAAA,QAAQ,CAACR,cAAc,CAACmB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAf,QAAAA,OAAO,CAACgB,IAAR,CAAc,aAAYjB,SAAU,cAApC;AACA;AACD,KA1BF,EA2BEkB,KA3BF,CA2BQtB,OAAO,CAACC,GA3BhB;AA4BA,GA/BD;AAgCA,CAjCM;AAmCP,OAAO,MAAMsB,aAAa,GAAG,CAACC,UAAD,EAAapB,SAAb,KAA2B;AACvD,SAAQE,QAAD,IAAc;AACpBC,IAAAA,KAAK,CACH,yCAAwCH,SAAU,cAD/C,EAEJ;AACCI,MAAAA,MAAM,EAAE,MADT;AAECE,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFV;AAKCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,UAAf;AALP,KAFI,CAAL,CAUEV,IAVF,CAUQG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EAVrB,EAWEF,IAXF,CAWQW,OAAD,IACLnB,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,gBAAR;AAA0BwB,MAAAA,OAAO,EAAED;AAAnC,KAAD,CAZV;AAcA,GAfD;AAgBA,CAjBM;AAmBP,OAAO,MAAME,gBAAgB,GAAG,CAACC,YAAD,EAAexB,SAAf,KAA6B;AAC5D,SAAQE,QAAD,IAAc;AACpB,WAAOC,KAAK,CACV,yCAAwCH,SAAU,gBAAewB,YAAa,EADpE,EAEX;AACCpB,MAAAA,MAAM,EAAE;AADT,KAFW,CAAL,CAMLM,IANK,CAMCG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EANd,EAOLF,IAPK,CAOCW,OAAD,IACLnB,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE,oBAAR;AAA8BwB,MAAAA,OAAO,EAAED;AAAvC,KAAD,CARH,CAAP;AAUA,GAXD;AAYA,CAbM","sourcesContent":["export const setDepartments = (departments) => {\n\tconsole.log(departments);\n\treturn {\n\t\ttype: \"GET_DEPARTMENTS\",\n\t\tdepartments,\n\t};\n};\n\nexport const getDepartments = (accountId, history) => {\n\treturn (dispatch) => {\n\t\tconsole.log(accountId);\n\t\tconsole.log(history);\n\t\tfetch(\n\t\t\t`http://localhost:3001/api/v1/accounts/${accountId}/departments`,\n\t\t\t{\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tcredentials: \"same-origin\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(),\n\t\t\t}\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tif (\n\t\t\t\t\tresponse.error ||\n\t\t\t\t\tresponse === null ||\n\t\t\t\t\tresponse === undefined\n\t\t\t\t) {\n\t\t\t\t\tconsole.log(\"no\");\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"yes\");\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tdispatch(setDepartments(response.data));\n\t\t\t\t\thistory.push(`/accounts/${accountId}/departments`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t};\n};\n\nexport const newDepartment = (department, accountId) => {\n\treturn (dispatch) => {\n\t\tfetch(\n\t\t\t`http://localhost:3000/api/v1/accounts/${accountId}/departments`,\n\t\t\t{\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(department),\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((account) =>\n\t\t\t\tdispatch({ type: \"ADD_DEPARTMENT\", payload: account })\n\t\t\t);\n\t};\n};\n\nexport const deleteDepartment = (departmentId, accountId) => {\n\treturn (dispatch) => {\n\t\treturn fetch(\n\t\t\t`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`,\n\t\t\t{\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((account) =>\n\t\t\t\tdispatch({ type: \"DELETE_TRANSACTION\", payload: account })\n\t\t\t);\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}