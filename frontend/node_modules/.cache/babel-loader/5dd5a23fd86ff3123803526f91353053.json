{"ast":null,"code":"import * as Cookies from \"js-cookie\";\nexport const setDepartments = departments => {\n  console.log(departments);\n  return {\n    type: \"GET_DEPARTMENTS\",\n    departments\n  };\n};\nexport const getDepartments = (accountId, history) => {\n  let token = Cookies.get(\"token\");\n  return dispatch => {\n    console.log(accountId);\n    console.log(history);\n    fetch(`http://localhost:3001/api/v1/accounts/${accountId}/departments`, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(),\n      Authorization: token\n    }).then(res => res.json()).then(response => {\n      console.log(response);\n\n      if (response.error || response === null || response === undefined) {\n        console.log(\"no\");\n      } else {\n        console.log(\"yes\");\n        console.log(response);\n        dispatch(setDepartments(response.data));\n        history.push(`/accounts/${accountId}/departments`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const newDepartment = (departmentData, accountId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/accounts/1/departments`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(departmentData)\n    }).then(response => response.json());\n    console.log(response).then(account => dispatch({\n      type: \"ADD_DEPARTMENT\",\n      payload: account\n    }));\n  };\n};\nexport const deleteDepartment = (departmentId, accountId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`, {\n      method: \"DELETE\"\n    }).then(response => response.json()).then(account => dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: account\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentDepartments.js"],"names":["Cookies","setDepartments","departments","console","log","type","getDepartments","accountId","history","token","get","dispatch","fetch","method","credentials","headers","body","JSON","stringify","Authorization","then","res","json","response","error","undefined","data","push","catch","newDepartment","departmentData","account","payload","deleteDepartment","departmentId"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AAEA,OAAO,MAAMC,cAAc,GAAIC,WAAD,IAAiB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACA,SAAO;AACNG,IAAAA,IAAI,EAAE,iBADA;AAENH,IAAAA;AAFM,GAAP;AAIA,CANM;AAQP,OAAO,MAAMI,cAAc,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACrD,MAAIC,KAAK,GAAGT,OAAO,CAACU,GAAR,CAAY,OAAZ,CAAZ;AACA,SAAQC,QAAD,IAAc;AACpBR,IAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACAI,IAAAA,KAAK,CACH,yCAAwCL,SAAU,cAD/C,EAEJ;AACCM,MAAAA,MAAM,EAAE,KADT;AAECC,MAAAA,WAAW,EAAE,aAFd;AAGCC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAHV;AAMCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,EANP;AAOCC,MAAAA,aAAa,EAAEV;AAPhB,KAFI,CAAL,CAYEW,IAZF,CAYQC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAZhB,EAaEF,IAbF,CAaQG,QAAD,IAAc;AACnBpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;;AACA,UACCA,QAAQ,CAACC,KAAT,IACAD,QAAQ,KAAK,IADb,IAEAA,QAAQ,KAAKE,SAHd,EAIE;AACDtB,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAND,MAMO;AACND,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACAZ,QAAAA,QAAQ,CAACV,cAAc,CAACsB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAlB,QAAAA,OAAO,CAACmB,IAAR,CAAc,aAAYpB,SAAU,cAApC;AACA;AACD,KA3BF,EA4BEqB,KA5BF,CA4BQzB,OAAO,CAACC,GA5BhB;AA6BA,GAhCD;AAiCA,CAnCM;AAqCP,OAAO,MAAMyB,aAAa,GAAG,CAACC,cAAD,EAAiBvB,SAAjB,KAA+B;AAC3D,SAAQI,QAAD,IAAc;AACpBC,IAAAA,KAAK,CAAE,qDAAF,EAAwD;AAC5DC,MAAAA,MAAM,EAAE,MADoD;AAE5DE,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFmD;AAK5DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeY,cAAf;AALsD,KAAxD,CAAL,CAMGV,IANH,CAMSG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EANtB;AAOAnB,IAAAA,OAAO,CACLC,GADF,CACMmB,QADN,EAEEH,IAFF,CAEQW,OAAD,IACLpB,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,gBAAR;AAA0B2B,MAAAA,OAAO,EAAED;AAAnC,KAAD,CAHV;AAKA,GAbD;AAcA,CAfM;AAiBP,OAAO,MAAME,gBAAgB,GAAG,CAACC,YAAD,EAAe3B,SAAf,KAA6B;AAC5D,SAAQI,QAAD,IAAc;AACpB,WAAOC,KAAK,CACV,yCAAwCL,SAAU,gBAAe2B,YAAa,EADpE,EAEX;AACCrB,MAAAA,MAAM,EAAE;AADT,KAFW,CAAL,CAMLO,IANK,CAMCG,QAAD,IAAcA,QAAQ,CAACD,IAAT,EANd,EAOLF,IAPK,CAOCW,OAAD,IACLpB,QAAQ,CAAC;AAAEN,MAAAA,IAAI,EAAE,oBAAR;AAA8B2B,MAAAA,OAAO,EAAED;AAAvC,KAAD,CARH,CAAP;AAUA,GAXD;AAYA,CAbM","sourcesContent":["import * as Cookies from \"js-cookie\";\n\nexport const setDepartments = (departments) => {\n\tconsole.log(departments);\n\treturn {\n\t\ttype: \"GET_DEPARTMENTS\",\n\t\tdepartments,\n\t};\n};\n\nexport const getDepartments = (accountId, history) => {\n\tlet token = Cookies.get(\"token\");\n\treturn (dispatch) => {\n\t\tconsole.log(accountId);\n\t\tconsole.log(history);\n\t\tfetch(\n\t\t\t`http://localhost:3001/api/v1/accounts/${accountId}/departments`,\n\t\t\t{\n\t\t\t\tmethod: \"GET\",\n\t\t\t\tcredentials: \"same-origin\",\n\t\t\t\theaders: {\n\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify(),\n\t\t\t\tAuthorization: token,\n\t\t\t}\n\t\t)\n\t\t\t.then((res) => res.json())\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tif (\n\t\t\t\t\tresponse.error ||\n\t\t\t\t\tresponse === null ||\n\t\t\t\t\tresponse === undefined\n\t\t\t\t) {\n\t\t\t\t\tconsole.log(\"no\");\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log(\"yes\");\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tdispatch(setDepartments(response.data));\n\t\t\t\t\thistory.push(`/accounts/${accountId}/departments`);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t};\n};\n\nexport const newDepartment = (departmentData, accountId) => {\n\treturn (dispatch) => {\n\t\tfetch(`http://localhost:3000/api/v1/accounts/1/departments`, {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(departmentData),\n\t\t}).then((response) => response.json());\n\t\tconsole\n\t\t\t.log(response)\n\t\t\t.then((account) =>\n\t\t\t\tdispatch({ type: \"ADD_DEPARTMENT\", payload: account })\n\t\t\t);\n\t};\n};\n\nexport const deleteDepartment = (departmentId, accountId) => {\n\treturn (dispatch) => {\n\t\treturn fetch(\n\t\t\t`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`,\n\t\t\t{\n\t\t\t\tmethod: \"DELETE\",\n\t\t\t}\n\t\t)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((account) =>\n\t\t\t\tdispatch({ type: \"DELETE_TRANSACTION\", payload: account })\n\t\t\t);\n\t};\n};\n"]},"metadata":{},"sourceType":"module"}