{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux';\nimport { loggedIn } from \"./actions/currentAccount.js\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport { Container } from 'react-bootstrap';\nimport PaymentNew from './components/PaymentNew';\nimport AccountContainer from './containers/AccountContainer';\nimport NavBar from './components/NavBar.js';\nimport DepartmentsContainer from './containers/DepartmentsContainer';\nimport Login from './components/registrations/Login';\nimport Logout from './components/registrations/Logout';\nimport Signup from './components/registrations/Signup';\nimport './App.scss';\n\nclass App extends Component {\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n  render() {\n    const stripe = require('stripe')(sk_test_YL9LwX6O769OsJcgA3tH1gjP);\n\n    const currentAccount = localStorage.getItem(\"loggedIn\");\n    console.log('current account is: ' + JSON.stringify(this.props.loginFormReducer));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Appclass text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(StripeProvider, {\n      apiKey: \"sk_test_YL9LwX6O769OsJcgA3tH1gjP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Elements, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      currentAccount: currentAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, currentAccount ? `${this.props.loginFormReducer.attributes.name} is signed in` : \"Not logged in\", \" \"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      from: \"/logout\",\n      to: \"api/v1/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(AccountContainer, Object.assign({}, props, {\n          account: currentAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id/departments\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(DepartmentsContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 20\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/accounts/:id/payments/new\",\n      render: props => {\n        /*#__PURE__*/\n        React.createElement(PaymentNew, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    })), currentAccount ? /*#__PURE__*/React.createElement(Logout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }\n    }) : null))));\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  loggedIn\n})(App));","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","Switch","Route","Redirect","withRouter","loadStripe","connect","loggedIn","Elements","StripeProvider","Container","PaymentNew","AccountContainer","NavBar","DepartmentsContainer","Login","Logout","Signup","App","componentDidMount","localStorage","getItem","props","history","render","stripe","require","sk_test_YL9LwX6O769OsJcgA3tH1gjP","currentAccount","console","log","JSON","stringify","loginFormReducer","attributes","name","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux'\nimport { loggedIn } from \"./actions/currentAccount.js\"\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport { Container } from 'react-bootstrap'\nimport PaymentNew from './components/PaymentNew'\nimport AccountContainer from './containers/AccountContainer'\nimport NavBar from './components/NavBar.js'\nimport DepartmentsContainer from './containers/DepartmentsContainer'\nimport Login from './components/registrations/Login'\nimport Logout from './components/registrations/Logout'\nimport Signup from './components/registrations/Signup'\nimport './App.scss'\n\nclass App extends Component {\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n  render() {\n\n        const stripe = require('stripe')(sk_test_YL9LwX6O769OsJcgA3tH1gjP);        \n        const currentAccount = localStorage.getItem(\"loggedIn\");\n        console.log('current account is: ' + JSON.stringify(this.props.loginFormReducer));\n    \n  return (\n   <div className = \"Appclass text-center\">  \n    <Container>\n     <StripeProvider apiKey=\"sk_test_YL9LwX6O769OsJcgA3tH1gjP\">\n       <Elements>    \n        <NavBar currentAccount={currentAccount} />\n          <h2>{ currentAccount ? `${this.props.loginFormReducer.attributes.name} is signed in` \n            : \"Not logged in\" } </h2>\n        <Switch>   \n          <Route exact path='/api/v1/login' render={props => ( <Login {...props}/>)}/>\n          <Route exact path='/api/v1/signup' render={props => ( <Signup {...props}/>)}/>\n          <Redirect from=\"/logout\" to=\"api/v1/login\" />\n          <Route exact path='/accounts/:id' render={props => {\n            return <AccountContainer {...props} account={currentAccount}/>\n          } }/>\n          <Route exact path='/accounts/:id/departments' render={props => {\n            return <DepartmentsContainer/>\n          } }/>\n          <Route path='/accounts/:id/payments/new' render={props => {\n                <PaymentNew {...props}/>\n          }} />\n        </Switch>\n      {currentAccount ? <Logout /> : null}\n     </Elements>\n   </StripeProvider>\n  </Container>\n </div>\n );\n  };\n};\n\nconst mapStateToProps = (state) => { //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}\n\nexport default withRouter(\n  connect(mapStateToProps, { loggedIn })(App)\n  );  "]},"metadata":{},"sourceType":"module"}