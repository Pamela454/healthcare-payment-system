{"ast":null,"code":"export const setCurrentAccount = account => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account: account\n  };\n};\nexport const clearCurrentAccount = account => {\n  return {\n    type: \"CLEAR_CURRENT_ACCOUNT\"\n  };\n}; //type and payload property \n//action creator, function that returns an action \n//thunk allows return of function instead of object. Function receives dispatch function and can dispatch multiple actions. \n//needs to be revised \n\nexport const getCurrentAccount = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_account\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(account => {\n      if (account.error) {\n        alert(\"error\");\n      } else {\n        dispatch(setCurrentAccount(account));\n      }\n    }).catch(console.log);\n  };\n};\nexport const login = form => {\n  //console.log(credentials)\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    }).then(res => res.json()).then(account => {\n      console.log(account);\n\n      if (account.error) {\n        console.log(\"no\");\n      } else {\n        dispatch(setCurrentAccount(account));\n      }\n    }).catch(console.log);\n  };\n};\nexport const logout = () => {\n  //localStorage.removeItem(\"token\")\n  //this.setState({\n  //account: null,\n  //secrets: [] //is this needed? \n  //})\n  return dispatch => {\n    dispatch(clearCurrentAccount());\n    return fetch(\"http://localhost:3001/api/v1/logout\", {\n      credentials: \"include\",\n      method: \"DELETE\"\n    });\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/setCurrentAccount.js"],"names":["setCurrentAccount","account","type","clearCurrentAccount","getCurrentAccount","dispatch","fetch","method","credentials","headers","then","res","json","error","alert","catch","console","log","login","form","body","JSON","stringify","logout"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,OAAD,IAAa;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAE,qBADD;AAELD,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAME,mBAAmB,GAAIF,OAAD,IAAa;AAC/C,SAAO;AACNC,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA,CAJM,C,CAMP;AACA;AACA;AAEA;;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAM;AACrC,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,kDAAD,EAAqD;AAC/DC,MAAAA,MAAM,EAAE,KADuD;AAE/DC,MAAAA,WAAW,EAAE,SAFkD;AAG/DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHsD,KAArD,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJF,IARI,CAQCT,OAAO,IAAI;AACf,UAAIA,OAAO,CAACY,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAFD,MAEO;AACLT,QAAAA,QAAQ,CAACL,iBAAiB,CAACC,OAAD,CAAlB,CAAR;AACD;AACF,KAdI,EAeJc,KAfI,CAeEC,OAAO,CAACC,GAfV,CAAP;AAgBD,GAjBD;AAkBD,CAnBM;AAqBP,OAAO,MAAMC,KAAK,GAAGC,IAAI,IAAI;AAC5B;AACA,SAAOd,QAAQ,IAAI;AAClB,WAAOC,KAAK,CAAC,oCAAD,EAAuC;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDE,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAFyC;AAKlDW,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AAL4C,KAAvC,CAAL,CAOLT,IAPK,CAOAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPP,EAQLF,IARK,CAQAT,OAAO,IAAI;AAChBe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;;AACA,UAAIA,OAAO,CAACY,KAAZ,EAAmB;AAClBG,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAFD,MAEO;AACNZ,QAAAA,QAAQ,CAACL,iBAAiB,CAACC,OAAD,CAAlB,CAAR;AACA;AACD,KAfK,EAgBLc,KAhBK,CAgBCC,OAAO,CAACC,GAhBT,CAAP;AAiBA,GAlBD;AAmBA,CArBM;AAuBP,OAAO,MAAMM,MAAM,GAAG,MAAM;AACxB;AACA;AACE;AACA;AACF;AACA,SAAOlB,QAAQ,IAAI;AAClBA,IAAAA,QAAQ,CAACF,mBAAmB,EAApB,CAAR;AACA,WAAOG,KAAK,CAAC,qCAAD,EAAwC;AACnDE,MAAAA,WAAW,EAAE,SADsC;AAEnDD,MAAAA,MAAM,EAAE;AAF2C,KAAxC,CAAZ;AAIA,GAND;AAOD,CAbI","sourcesContent":["export const setCurrentAccount = (account) => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account: account \n  };\n};\n\nexport const clearCurrentAccount = (account) => {\n\treturn {\n\t\ttype: \"CLEAR_CURRENT_ACCOUNT\"\n\t};\n};\n\n//type and payload property \n//action creator, function that returns an action \n//thunk allows return of function instead of object. Function receives dispatch function and can dispatch multiple actions. \n\n//needs to be revised \nexport const getCurrentAccount = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_account\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(account => {\n        if (account.error) {\n          alert(\"error\");\n        } else {\n          dispatch(setCurrentAccount(account));\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const login = form => {\n\t//console.log(credentials)\n\treturn dispatch => {\n\t\treturn fetch(\"http://localhost:3001/api/v1/login\", {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify(form)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(account => {\n\t\t\t\tconsole.log(account)\n\t\t\t\tif (account.error) {\n\t\t\t\t\tconsole.log(\"no\")\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(setCurrentAccount(account))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t}\n}\n\nexport const logout = () => {\n    //localStorage.removeItem(\"token\")\n    //this.setState({\n      //account: null,\n      //secrets: [] //is this needed? \n    //})\n    return dispatch => {\n    \tdispatch(clearCurrentAccount());\n    \treturn fetch(\"http://localhost:3001/api/v1/logout\", {\n    \t\tcredentials: \"include\",\n    \t\tmethod: \"DELETE\"\n    \t});\n    };\n  }\n"]},"metadata":{},"sourceType":"module"}