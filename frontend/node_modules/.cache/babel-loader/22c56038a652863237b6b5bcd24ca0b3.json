{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\nimport Home from './components/Home';\nimport { connect } from 'react-redux';\nimport { fetchAccounts } from './actions/fetchAccounts';\nimport AccountsContainer from './containers/AccountsContainer';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loginStatus = () => {\n      axios.get('http://localhost:3001/logged_in', {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          this.handleLogin(response);\n          this.props.fetchAccounts({\n            type: 'FETCH_ACCOUNTS',\n            payload: {\n              name: 'Checking'\n            }\n          });\n        } else {\n          this.handleLogout();\n        }\n      }).catch(error => console.log('api errors:', error));\n    };\n\n    this.handleLogin = data => {\n      this.setState({\n        isLoggedIn: true,\n        account: data.account\n      });\n    };\n\n    this.handleLogout = () => {\n      this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    this.state = {\n      isLoggedIn: false,\n      account: {}\n    };\n  }\n\n  componentDidMount() {\n    this.loginStatus();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(AccountsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, props, {\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        handleLogin: this.handleLogin,\n        loggedInStatus: this.state.isLoggedIn,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default connect(null, {\n  fetchAccounts\n})(App); //connects to redux store. returns store.dispatch(type: 'FETCH_ACCOUNTS', payload: {name: 'Checking'}})","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","axios","BrowserRouter","Switch","Route","Login","Signup","Home","connect","fetchAccounts","AccountsContainer","App","constructor","props","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","type","payload","name","handleLogout","catch","error","console","log","setState","isLoggedIn","account","user","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\nimport Home from './components/Home'\nimport {connect} from 'react-redux'\nimport {fetchAccounts} from './actions/fetchAccounts'\nimport AccountsContainer from './containers/AccountsContainer'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      isLoggedIn: false,\n      account: {}\n     };\n  }\t\n\n  componentDidMount() {\n  \tthis.loginStatus()\n}  loginStatus = () => {\n    axios.get('http://localhost:3001/logged_in', \n    {withCredentials: true})    \n    .then(response => {\n      if (response.data.logged_in) {\n        this.handleLogin(response)\n        this.props.fetchAccounts({type: 'FETCH_ACCOUNTS', payload: {name: 'Checking'}})\n      } else {\n        this.handleLogout()\n      }\n    })\n    .catch(error => console.log('api errors:', error))\n  }\n    //this.props.fetchAccounts({type: 'FETCH_ACCOUNTS', payload: {name: 'Checking'}})\n\n  handleLogin = (data) => {\n    this.setState({\n      isLoggedIn: true,\n      account: data.account \n    })\n  }\n\n  handleLogout = () => {\n    this.setState({\n    isLoggedIn: false,\n    user: {}\n    })\n  }\n\n \n  render() {\n  return (\n    <div className=\"App\">\n      <AccountsContainer/>\n      <BrowserRouter>\n          <Switch>\n            <Route exact path='/' render={props => (\n              <Home {...props} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/login' \n              render={props => (\n              <Login {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n            <Route \n              exact path='/signup' \n              render={props => (\n              <Signup {...props} handleLogin={this.handleLogin} loggedInStatus={this.state.isLoggedIn}/>\n              )}\n            />\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n }\n}\n\nexport default connect(null, {fetchAccounts})(App);  //connects to redux store. returns store.dispatch(type: 'FETCH_ACCOUNTS', payload: {name: 'Checking'}}) \n"]},"metadata":{},"sourceType":"module"}