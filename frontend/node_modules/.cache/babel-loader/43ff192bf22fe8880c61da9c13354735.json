{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/containers/AccountContainer.js\";\n// render other components, can have other functions inside them. Typically class components. \nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { getCurrentAccount } from '';\nimport Accounts from '../components/Accounts';\nimport Account from '../components/Account';\nimport AccountNew from '../components/AccountNew'; //import NavBar from '../components/NavBar'\n//containers manage state and class methods \n//provides data and behavior to children \n//react creates instances of it \n//more time consuming than calling a function \n//only compnent connected to store?\n\nclass AccountsContainer extends React.Component {\n  //can call lifecycle hooks\n  //render stated component \n  //return react element from render function \n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/accounts/new\",\n      component: AccountNew,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id\",\n      render: routerProps => /*#__PURE__*/React.createElement(Account, Object.assign({}, routerProps, {\n        accounts: this.props.accounts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 67\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts\",\n      render: routerProps => /*#__PURE__*/React.createElement(Accounts, Object.assign({}, routerProps, {\n        accounts: this.props.accounts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }\n    })));\n  }\n\n} //is this needed if not displaying list of accounts?\n\n\nconst mapStateToProps = state => {\n  //this is the state from redux \n  return {\n    accounts: state.accounts //accounts located inside the state\n\n  };\n}; //dispatch happens automatically with connect \n\n\nexport default connect(mapStateToProps, {\n  getCurrentAccount\n})(AccountsContainer);","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/containers/AccountContainer.js"],"names":["React","connect","Route","Switch","getCurrentAccount","Accounts","Account","AccountNew","AccountsContainer","Component","render","routerProps","props","accounts","mapStateToProps","state"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAASC,iBAAT,QAAkC,EAAlC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,iBAAN,SAAgCR,KAAK,CAACS,SAAtC,CAAgD;AAAE;AAElD;AACA;AACCC,EAAAA,MAAM,GAAI;AACT,wBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,SAAS,EAAEH,UAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,eAEG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAkC,MAAA,MAAM,EAAGI,WAAD,iBAAiB,oBAAC,OAAD,oBAAaA,WAAb;AAA0B,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,eAGG,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,MAAM,EAAGF,WAAD,iBAAiB,oBAAC,QAAD,oBAAcA,WAAd;AAA2B,QAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADD,CADD;AASA;;AAd8C,C,CAgBhD;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAAE;AAClC,SAAO;AACNF,IAAAA,QAAQ,EAAEE,KAAK,CAACF,QADV,CACmB;;AADnB,GAAP;AAGA,CAJD,C,CAKA;;;AACA,eAAeZ,OAAO,CAACa,eAAD,EAAkB;AAAEV,EAAAA;AAAF,CAAlB,CAAP,CAAgDI,iBAAhD,CAAf","sourcesContent":["// render other components, can have other functions inside them. Typically class components. \nimport React from 'react'\nimport {connect} from 'react-redux'\nimport {Route, Switch} from 'react-router-dom'\nimport { getCurrentAccount } from ''\nimport Accounts from '../components/Accounts'\nimport Account from '../components/Account'\nimport AccountNew from '../components/AccountNew'\n//import NavBar from '../components/NavBar'\n\n//containers manage state and class methods \n//provides data and behavior to children \n//react creates instances of it \n//more time consuming than calling a function \n//only compnent connected to store?\n\nclass AccountsContainer extends React.Component { //can call lifecycle hooks\n\t\n//render stated component \n//return react element from render function \n\trender () {\n\t\treturn (\n\t\t\t<div>\n\t\t\t <Switch>\n\t\t\t    <Route path='/accounts/new' component={AccountNew} />\n\t\t\t    <Route exact path='/accounts/:id' render={(routerProps) => <Account {...routerProps} accounts={this.props.accounts}/> } />\n\t\t\t    <Route exact path='/accounts' render={(routerProps) => <Accounts {...routerProps} accounts={this.props.accounts}/> } /> \n\t\t\t </Switch>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n//is this needed if not displaying list of accounts?\nconst mapStateToProps = state => { //this is the state from redux \n\treturn {\n\t\taccounts: state.accounts //accounts located inside the state\n\t}\n}\n//dispatch happens automatically with connect \nexport default connect(mapStateToProps, { getCurrentAccount })(AccountsContainer)"]},"metadata":{},"sourceType":"module"}