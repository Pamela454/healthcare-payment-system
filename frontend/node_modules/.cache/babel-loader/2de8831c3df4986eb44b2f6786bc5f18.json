{"ast":null,"code":"export const setCurrentAccount = account => {\n  console.log(account);\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    payload: account\n  };\n};\nexport const getDepartments = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/accounts/${accountId}/departments\", {\n      method: \"GET\",\n      credentials: 'same-origin',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify()\n    }).then(res => res.json()).then(response => {\n      console.log(account);\n\n      if (response.error || response === null || response === undefined) {\n        console.log(\"no\");\n      } else {\n        console.log(\"yes\");\n        console.log(account.data);\n        dispatch(getDepartments(account.data));\n        history.push(`/accounts/${account.data.id}/departments`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const newDepartment = (department, accountId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(department)\n    }).then(response => response.json()).then(account => dispatch({\n      type: 'ADD_DEPARTMENT',\n      payload: account\n    }));\n  };\n};\nexport const deleteDepartment = (departmentId, accountId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(account => dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: account\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentDepartments.js"],"names":["setCurrentAccount","account","console","log","type","payload","getDepartments","dispatch","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","response","error","undefined","data","history","push","id","catch","newDepartment","department","accountId","deleteDepartment","departmentId"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,OAAD,IAAa;AACxCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACJ,SAAO;AACLG,IAAAA,IAAI,EAAE,qBADD;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMK,cAAc,GAAG,MAAM;AACnC,SAAOC,QAAQ,IAAI;AAClB,WAAOC,KAAK,CAAC,gEAAD,EAAmE;AAC9EC,MAAAA,MAAM,EAAE,KADsE;AAE3EC,MAAAA,WAAW,EAAE,aAF8D;AAG9EC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAHqE;AAM9EC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AANwE,KAAnE,CAAL,CAQLC,IARK,CAQAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARP,EASLF,IATK,CASAG,QAAQ,IAAI;AACjBhB,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,UAAIiB,QAAQ,CAACC,KAAT,IAAkBD,QAAQ,KAAK,IAA/B,IAAuCA,QAAQ,KAAKE,SAAxD,EAAmE;AAClElB,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAFD,MAEO;AACDD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACoB,IAApB;AACNd,QAAAA,QAAQ,CAACD,cAAc,CAACL,OAAO,CAACoB,IAAT,CAAf,CAAR;AACMC,QAAAA,OAAO,CAACC,IAAR,CAAc,aAAYtB,OAAO,CAACoB,IAAR,CAAaG,EAAG,cAA1C;AACL;AACD,KAnBK,EAoBLC,KApBK,CAoBCvB,OAAO,CAACC,GApBT,CAAP;AAqBA,GAtBD;AAuBA,CAxBM;AA0BP,OAAO,MAAMuB,aAAa,GAAG,CAACC,UAAD,EAAaC,SAAb,KAA2B;AACvD,SAAQrB,QAAD,IAAc;AACpBC,IAAAA,KAAK,CAAE,yCAAwCoB,SAAU,cAApD,EAAmE;AACvEnB,MAAAA,MAAM,EAAE,MAD+D;AAEvEE,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAF8D;AAKvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAea,UAAf;AALiE,KAAnE,CAAL,CAOCZ,IAPD,CAOMG,QAAQ,IAAIA,QAAQ,CAACD,IAAT,EAPlB,EAQCF,IARD,CAQMd,OAAO,IAAIM,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE,gBAAP;AAAyBC,MAAAA,OAAO,EAAEJ;AAAlC,KAAD,CARzB;AASA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAM4B,gBAAgB,GAAG,CAACC,YAAD,EAAeF,SAAf,KAA6B;AAC5D,SAAQrB,QAAD,IAAc;AACpB,WAAOC,KAAK,CAAE,yCAAwCoB,SAAU,gBAAeE,YAAa,EAAhF,EAAmF;AAC9FrB,MAAAA,MAAM,EAAE;AADsF,KAAnF,CAAL,CAGNM,IAHM,CAGDG,QAAQ,IAAIA,QAAQ,CAACD,IAAT,EAHX,EAINF,IAJM,CAIDd,OAAO,IAAIM,QAAQ,CAAC;AAACH,MAAAA,IAAI,EAAE,oBAAP;AAA6BC,MAAAA,OAAO,EAAEJ;AAAtC,KAAD,CAJlB,CAAP;AAKA,GAND;AAOA,CARM","sourcesContent":["export const setCurrentAccount = (account) => {\n      console.log(account)\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    payload: account\n  };\n};\n\nexport const getDepartments = () => {\n\treturn dispatch => {\n\t\treturn fetch(\"http://localhost:3001/api/v1/accounts/${accountId}/departments\", {\n\t\t\tmethod: \"GET\",\n      credentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify()\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(response => {\n\t\t\t\tconsole.log(account)\n\t\t\t\tif (response.error || response === null || response === undefined) {\n\t\t\t\t\tconsole.log(\"no\")\n\t\t\t\t} else {\n          console.log(\"yes\")\n          console.log(account.data)\n\t\t  dispatch(getDepartments(account.data))\n          history.push(`/accounts/${account.data.id}/departments`)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t}\n}\n\nexport const newDepartment = (department, accountId) => {\n\treturn (dispatch) => {\n\t\tfetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(department)\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(account => dispatch({type: 'ADD_DEPARTMENT', payload: account}))\n\t}\n}\n\nexport const deleteDepartment = (departmentId, accountId) => {\n\treturn (dispatch) => {\n\t\treturn fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`, {\n\t\t\tmethod: 'DELETE'\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(account => dispatch({type: 'DELETE_TRANSACTION', payload: account}))\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}