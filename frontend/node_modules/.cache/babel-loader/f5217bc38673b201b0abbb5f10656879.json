{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux'; //import {Redirect} from \"react-router-dom\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { getDepartments } from \".././actions/currentDepartments.js\";\nimport DepartmentsContainer from '../containers/DepartmentsContainer'; //does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = (props, history) => {\n  //let account = props.accounts[props.match.params.id - 1]\n  //do you need a key?, only if iterating \n  //do I need a default balance of 0 when creating a new account? \n  console.log(props.account.id);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \" Account Name \"), props.account ? ` - ` + props.account.attributes.name : null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \" Account Balance \"), props.account ? `$` + props.account.attributes.balance : null), /*#__PURE__*/React.createElement(Button, {\n    onClick: getDepartments(props.account.id, history),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/departments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 69\n    }\n  }, \"View Departments\")), /*#__PURE__*/React.createElement(DepartmentsContainer, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 8\n    }\n  })));\n\n  const mapStateToProps = state => {\n    return {\n      form: state.form\n    };\n  };\n};\n\n_c = Account;\nexport default withRouter(connect(mapStateToProps, {\n  getDepartments\n})(Account));\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js"],"names":["React","Link","connect","withRouter","Button","getDepartments","DepartmentsContainer","Account","props","history","console","log","account","id","attributes","name","balance","mapStateToProps","state","form"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA,OAAOC,oBAAP,MAAiC,oCAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACnC;AACD;AACA;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,OAAN,CAAcC,EAA1B;AACD,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAC+BL,KAAK,CAACI,OAAN,GAAgB,KAAD,GAAQJ,KAAK,CAACI,OAAN,CAAcE,UAAd,CAAyBC,IAAhD,GAAuD,IADtF,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,EAEkCP,KAAK,CAACI,OAAN,GAAiB,GAAD,GAAMJ,KAAK,CAACI,OAAN,CAAcE,UAAd,CAAyBE,OAA/C,GAAyD,IAF3F,CADJ,eAKO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEX,cAAc,CAACG,KAAK,CAACI,OAAN,CAAcC,EAAf,EAAmBJ,OAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA4D,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5D,CALP,eAMM,oBAAC,oBAAD,oBAA0BD,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANN,CADD;;AAYC,QAAMS,eAAe,GAAGC,KAAK,IAAI;AAChC,WAAO;AACLC,MAAAA,IAAI,EAAED,KAAK,CAACC;AADP,KAAP;AAGA,GAJD;AAMA,CAvBD;;KAAMZ,O;AAyBN,eAAeJ,UAAU,CAACD,OAAO,CAACe,eAAD,EAAkB;AAACZ,EAAAA;AAAD,CAAlB,CAAP,CAA2CE,OAA3C,CAAD,CAAzB","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\n//import {Redirect} from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap'\nimport { getDepartments } from \".././actions/currentDepartments.js\"\nimport DepartmentsContainer from '../containers/DepartmentsContainer'\n\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = (props, history) => {\n\t//let account = props.accounts[props.match.params.id - 1]\n//do you need a key?, only if iterating \n//do I need a default balance of 0 when creating a new account? \n\tconsole.log(props.account.id)\nreturn (\n\t<div>\n     <h2>\n     \t<label> Account Name </label>{props.account? ` - ` + props.account.attributes.name : null} \n     \t<label> Account Balance </label>{props.account ? `$` + props.account.attributes.balance : null}\n     </h2>\n        <Button onClick={getDepartments(props.account.id, history)}><Link to=\"/departments\">View Departments</Link></Button>\n       <DepartmentsContainer {...props}/>\n     </div>\n\n\t)\n\n const mapStateToProps = state => {\n  return {\n    form: state.form \n  };\n };\n\n}\n\nexport default withRouter(connect(mapStateToProps, {getDepartments})(Account)) "]},"metadata":{},"sourceType":"module"}