{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom'; //import {Redirect} from \"react-router-dom\"\n\nimport DepartmentsContainer from '../containers/DepartmentsContainer'; //does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = props => {\n  //let account = props.accounts[props.match.params.id - 1]\n  //do you need a key?, only if iterating \n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \" Account Name \"), account ? account.name : null, \" - \", /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 70\n    }\n  }, \" Account Balance \"), account ? account.balance : null), /*#__PURE__*/React.createElement(DepartmentsContainer, {\n    account: account,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 8\n    }\n  }));\n};\n\n_c = Account;\nexport default Account;\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js"],"names":["React","Link","DepartmentsContainer","Account","props","account","name","balance"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,oCAAjC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAE1B;AACD;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAC+BC,OAAO,GAAGA,OAAO,CAACC,IAAX,GAAkB,IADxD,sBACgE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADhE,EACiGD,OAAO,GAAGA,OAAO,CAACE,OAAX,GAAqB,IAD7H,CADJ,eAIM,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEF,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJN,CADD;AAUC,CAdD;;KAAMF,O;AAgBN,eAAeA,OAAf","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\n//import {Redirect} from \"react-router-dom\"\nimport DepartmentsContainer from '../containers/DepartmentsContainer'\n\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = (props) => {\n\n\t//let account = props.accounts[props.match.params.id - 1]\n//do you need a key?, only if iterating \nreturn (\n\t<div>\n     <h2>\n     \t<label> Account Name </label>{account ? account.name : null} - <label> Account Balance </label>{account ? account.balance : null}\n     </h2>\n       <DepartmentsContainer account={account}/>\n     </div>\n\n\t)\n\n}\n\nexport default Account "]},"metadata":{},"sourceType":"module"}