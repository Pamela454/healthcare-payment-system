{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/index.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom'; //import { Router, Route } from 'react-router';\n\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'; //from imported redux library\n\nimport thunk from 'redux-thunk';\nimport { Router } from 'react-router-dom';\nimport { Provider } from 'react-redux'; //wrapped in provider so has access to store\n\nimport accountReducer from './reducers/accountReducer';\nimport App from './App';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nlet store = createStore(accountReducer, composeEnhancers(applyMiddleware(thunk))); //containers act more like parent components, contain other componenets\n//store - data stored globally. could create in separate file and import. \n//reducer - what to do with store based on certain actions. returns a new version of the store. \n//below grants app access to the store \n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Router, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }\n}))), document.getElementById('root')); //router gives any child access to setting up routes and using links. children all wrapped in router\n//reducer tells what to do with store based on certain actions \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/index.js"],"names":["React","Component","axios","ReactDOM","serviceWorker","createStore","applyMiddleware","compose","thunk","Router","Provider","accountReducer","App","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB,C,CACA;;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD,C,CAA4D;;AAC5D,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAAuC;;AACvC,OAAOC,cAAP,MAA2B,2BAA3B;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAGA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CR,OAAxE;AAEA,IAAIS,KAAK,GAAGX,WAAW,CAACM,cAAD,EAAiBE,gBAAgB,CAACP,eAAe,CAACE,KAAD,CAAhB,CAAjC,CAAvB,C,CACA;AACA;AACA;AACA;;AAEAL,QAAQ,CAACc,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACF,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADE,CADA,CADJ,EAMCE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAND,E,CAOA;AACA;AACA;AACA;AACA;;AACAf,aAAa,CAACgB,UAAd","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport ReactDOM from 'react-dom';\n//import { Router, Route } from 'react-router';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux' //from imported redux library\nimport thunk from 'redux-thunk' \nimport {Router} from 'react-router-dom'\nimport { Provider } from 'react-redux' //wrapped in provider so has access to store\nimport accountReducer from './reducers/accountReducer'\n\nimport App from './App';\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \n\nlet store = createStore(accountReducer, composeEnhancers(applyMiddleware(thunk)))\n//containers act more like parent components, contain other componenets\n//store - data stored globally. could create in separate file and import. \n//reducer - what to do with store based on certain actions. returns a new version of the store. \n//below grants app access to the store \n\nReactDOM.render(\n    <Provider store={store}>\n    <Router> \n\t\t<App /> \n\t</Router>\n\t</Provider>, \n\tdocument.getElementById('root'));\n//router gives any child access to setting up routes and using links. children all wrapped in router\n//reducer tells what to do with store based on certain actions \n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}