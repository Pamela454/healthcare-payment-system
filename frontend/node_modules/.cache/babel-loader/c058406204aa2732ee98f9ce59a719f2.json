{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux';\nimport { loggedIn } from \"./actions/currentAccount.js\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport PaymentNew from './components/PaymentNew';\nimport AccountContainer from './containers/AccountContainer';\nimport Navbar from './components/Navbar';\nimport DepartmentsContainer from './containers/DepartmentsContainer';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap';\n\nclass App extends Component {\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n  render() {\n    const stripe = loadStripe('pk_test_tZpOKpVsO8ccsjSLbrnuwwEH');\n    const currentAccount = localStorage.getItem(\"loggedIn\");\n    console.log('current account is: ' + JSON.stringify(this.props.loginFormReducer));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, currentAccount ? `Logged in as ${this.props.loginFormReducer.attributes.name}` : \"Not logged in\"), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      from: \"/logout\",\n      to: \"api/v1/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(AccountContainer, Object.assign({}, props, {\n          account: currentAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 20\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id/departments\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(DepartmentsContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 20\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/accounts/:id/payments/new\",\n      render: props => {\n        /*#__PURE__*/\n        React.createElement(StripeProvider, {\n          apiKey: \"pk_test_tZpOKpVsO8ccsjSLbrnuwwEH\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Elements, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(PaymentNew, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }\n        }))));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    })), currentAccount ? /*#__PURE__*/React.createElement(Navbar, {\n      account: currentAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }) : null);\n  }\n\n} //gives access to part of store \n//receives entire state as it's argument \n\n\nconst mapStateToProps = state => {\n  //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}; //could be changed to anonymous arrow function \n//dispatch is injected as a prop\n\n\nexport default withRouter(connect(mapStateToProps, {\n  loggedIn\n})(App)); // specifies component to provide data to.","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","ReactDOM","Switch","Route","Redirect","withRouter","loadStripe","connect","loggedIn","Elements","StripeProvider","PaymentNew","AccountContainer","Navbar","DepartmentsContainer","Login","Signup","Container","Row","Col","App","componentDidMount","localStorage","getItem","props","history","render","stripe","currentAccount","console","log","JSON","stringify","loginFormReducer","attributes","name","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux'\nimport { loggedIn } from \"./actions/currentAccount.js\"\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport PaymentNew from './components/PaymentNew'\nimport AccountContainer from './containers/AccountContainer'\nimport Navbar from './components/Navbar'\nimport DepartmentsContainer from './containers/DepartmentsContainer'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nclass App extends Component {\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n  render() {\n\n        const stripe = loadStripe('pk_test_tZpOKpVsO8ccsjSLbrnuwwEH');\n        const currentAccount = localStorage.getItem(\"loggedIn\");\n        console.log('current account is: ' + JSON.stringify(this.props.loginFormReducer));\n    \n    return (\n      <div className=\"App\">\n            <h2>{ currentAccount ? \n        `Logged in as ${this.props.loginFormReducer.attributes.name}` :\n        \"Not logged in\" }</h2> \n        <Switch>   \n          <Route exact path='/api/v1/login' render={props => ( <Login {...props}/>)}/>\n          <Route exact path='/api/v1/signup' render={props => ( <Signup {...props}/>)}/>\n          <Redirect from=\"/logout\" to=\"api/v1/login\" />\n          <Route exact path='/accounts/:id' render={props => {\n            return <AccountContainer {...props} account={currentAccount}/>\n          } }/>\n          <Route exact path='/accounts/:id/departments' render={props => {\n            return <DepartmentsContainer/>\n          } }/>\n          <Route path='/accounts/:id/payments/new' render={props => {\n            <StripeProvider apiKey=\"pk_test_tZpOKpVsO8ccsjSLbrnuwwEH\">\n              <Elements>\n                <PaymentNew {...props}/>\n              </Elements>\n            </StripeProvider>\n          }} />\n        </Switch>\n         { currentAccount ? <Navbar account={currentAccount}/> : null } \n    </div>\n    );\n  }\n}\n//gives access to part of store \n//receives entire state as it's argument \nconst mapStateToProps = state => { //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}\n//could be changed to anonymous arrow function \n//dispatch is injected as a prop\nexport default withRouter(connect(mapStateToProps, { loggedIn })(App)); // specifies component to provide data to. "]},"metadata":{},"sourceType":"module"}