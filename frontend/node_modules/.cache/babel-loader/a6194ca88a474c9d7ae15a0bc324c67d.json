{"ast":null,"code":"export const addPayment = payment => {\n  return {\n    type: \"ADD_PAYMENT\",\n    payload: payment\n  };\n};\nexport const newPayment = (paymentData, history) => {\n  return dispatch => {\n    const url = `http://localhost:3001/api/v1/accounts/${paymentData.account_id}/payments/new`;\n    return fetch(url, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(paymentData)\n    }).then(res => res.json()).then(payment => {\n      console.log(\"payment response\");\n      console.log(payment);\n\n      if (payment.error) {\n        console.log(\"error is: \");\n        console.log(payment.error);\n        alert(\"error\");\n      } else {\n        console.log(\"payment.data: \");\n        console.log(payment.data);\n        dispatch(addPayment(payment.data)); //call additional action to update account\n\n        history.push(`/accounts/${paymentData.account_id}`);\n      }\n    }).catch(console.log);\n  };\n};\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js"],"names":["addPayment","payment","type","payload","newPayment","paymentData","history","dispatch","url","account_id","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","console","log","error","alert","data","push","catch"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,UAAU,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAClD,SAAQC,QAAD,IAAc;AACnB,UAAMC,GAAG,GAAI,yCAAwCH,WAAW,CAACI,UAAW,eAA5E;AACA,WAAOC,KAAK,CAACF,GAAD,EAAM;AAChBG,MAAAA,MAAM,EAAE,MADQ;AAEhBC,MAAAA,WAAW,EAAE,aAFG;AAGhBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHO;AAMhBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,WAAf;AANU,KAAN,CAAL,CAQJY,IARI,CAQEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EARV,EASJF,IATI,CASEhB,OAAD,IAAa;AACjBmB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;;AACA,UAAIA,OAAO,CAACqB,KAAZ,EAAmB;AACjBF,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAO,CAACqB,KAApB;AACAC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAJD,MAIO;AACLH,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAO,CAACuB,IAApB;AACAjB,QAAAA,QAAQ,CAACP,UAAU,CAACC,OAAO,CAACuB,IAAT,CAAX,CAAR,CAHK,CAIL;;AACAlB,QAAAA,OAAO,CAACmB,IAAR,CAAc,aAAYpB,WAAW,CAACI,UAAW,EAAjD;AACD;AACF,KAvBI,EAwBJiB,KAxBI,CAwBEN,OAAO,CAACC,GAxBV,CAAP;AAyBD,GA3BD;AA4BD,CA7BM;AA+BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const addPayment = (payment) => {\n  return {\n    type: \"ADD_PAYMENT\",\n    payload: payment,\n  };\n};\n\nexport const newPayment = (paymentData, history) => {\n  return (dispatch) => {\n    const url = `http://localhost:3001/api/v1/accounts/${paymentData.account_id}/payments/new`;\n    return fetch(url, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(paymentData),\n    })\n      .then((res) => res.json())\n      .then((payment) => {\n        console.log(\"payment response\");\n        console.log(payment);\n        if (payment.error) {\n          console.log(\"error is: \");\n          console.log(payment.error);\n          alert(\"error\");\n        } else {\n          console.log(\"payment.data: \");\n          console.log(payment.data);\n          dispatch(addPayment(payment.data));\n          //call additional action to update account\n          history.push(`/accounts/${paymentData.account_id}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */\n"]},"metadata":{},"sourceType":"module"}