{"ast":null,"code":"const initialState = {\n  departments: []\n};\nexport default function departmentsReducer(state = initialState, action) {\n  //combines current state and action \n  switch (action.type) {\n    case 'GET_DEPARTMENTS':\n      return action.payload.departments;\n\n    case 'ADD_DEPARTMENT':\n    case 'DELETE_DEPARTMENT': //at least returns some version of state\n\n    default:\n      return state;\n    //never return null \n  }\n}\n/*\n\nstate = { departments: [] }\n\nstate = { departments: [] } // new object wrapper\n\nstate = { departments: [] }  // new array in the departments variable\n\nstate = { departments: [] } // spreading the initialState's array\n\nstate = { departments: [action.payload] } // adding action.payoad to the array\n\nstate = { departments: [ [{id:1, attributes: {charge:20, name:\"\", service:\"\"} }] ] } // adding action.payoad to the array\n\n\n*/","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/reducers/departmentsReducer.js"],"names":["initialState","departments","departmentsReducer","state","action","type","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACpBC,EAAAA,WAAW,EAAE;AADO,CAArB;AAKA,eAAe,SAASC,kBAAT,CAA4BC,KAAK,GAAGH,YAApC,EAAkDI,MAAlD,EAA0D;AAAG;AAC3E,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,iBAAL;AACC,aAAOD,MAAM,CAACE,OAAP,CAAeL,WAAtB;;AACD,SAAK,gBAAL;AAGA,SAAK,mBAAL,CANH,CAM6B;;AAE1B;AACM,aAAOE,KAAP;AAAa;AATtB;AAWA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const initialState = {\n\tdepartments: []\n}\n\n\nexport default function departmentsReducer(state = initialState, action) {  //combines current state and action \n\tswitch (action.type) {\n    case 'GET_DEPARTMENTS': \n    \treturn action.payload.departments\n    case 'ADD_DEPARTMENT': \n          \n          \n    case 'DELETE_DEPARTMENT': //at least returns some version of state\n          \n    default:\n          return state //never return null \n    }       \n}\n\n/*\n\nstate = { departments: [] }\n\nstate = { departments: [] } // new object wrapper\n\nstate = { departments: [] }  // new array in the departments variable\n\nstate = { departments: [] } // spreading the initialState's array\n\nstate = { departments: [action.payload] } // adding action.payoad to the array\n\nstate = { departments: [ [{id:1, attributes: {charge:20, name:\"\", service:\"\"} }] ] } // adding action.payoad to the array\n\n\n*/"]},"metadata":{},"sourceType":"module"}