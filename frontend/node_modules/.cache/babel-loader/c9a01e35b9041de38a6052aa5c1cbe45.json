{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/PaymentNew.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { CardElement, injectStripe } from 'react-stripe-elements';\nimport { newPayment } from \"../actions/currentPayments\"; //form data available in local state or store? \n//class component, local state holding \n\nconst PaymentNew = props => {\n  _s();\n\n  const [form, setForm] = useState({\n    amount: ''\n  });\n  console.log(this.props);\n  const accountId = this.props;\n\n  const handlePaymentFormChange = (event, target) => {\n    setForm({ ...form,\n      [target]: event.target.value\n    });\n  };\n\n  const handlePaymentFormSubmit = (event, accountId) => {\n    event.preventDefault();\n    newPayment(form);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"NewPayment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"New Payment\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handlePaymentFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"amount\",\n    type: \"text\",\n    name: \"amount\",\n    autoComplete: \"on\",\n    value: form.amount,\n    onChange: event => handlePaymentFormChange(event, \"amount\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"cardnumber\",\n    type: \"text\",\n    name: \"card number\",\n    autoComplete: \"on\",\n    value: form.cardnumber,\n    onChange: event => handlePaymentFormChange(event, \"cardnumber\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"expiration\",\n    type: \"text\",\n    name: \"expiration\",\n    autoComplete: \"on\",\n    value: form.expiry,\n    onChange: event => handlePaymentFormChange(event, \"expiration\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"cvc\",\n    type: \"text\",\n    name: \"cvc\",\n    autoComplete: \"on\",\n    value: form.cvc,\n    onChange: event => handlePaymentFormChange(event, \"cvc\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    placeholder: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Make Payment\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }));\n};\n/*function InjectedCheckoutForm() {\n  return (\n    <ElementsConsumer>\n      {({ stripe, elements }) => (\n        <CheckoutForm stripe={stripe} elements={elements} />\n      )}\n    </ElementsConsumer>\n  );\n}*/\n\n\n_s(PaymentNew, \"NDCha37EwvsooFzp/HBg05HhVQY=\");\n\n_c = PaymentNew;\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  currentPayments\n}), injectStripe(PaymentNew));\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentNew\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/PaymentNew.js"],"names":["React","useState","withRouter","connect","CardElement","injectStripe","newPayment","PaymentNew","props","form","setForm","amount","console","log","accountId","handlePaymentFormChange","event","target","value","handlePaymentFormSubmit","preventDefault","cardnumber","expiry","cvc","mapStateToProps","state","currentPayments"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {CardElement, injectStripe} from 'react-stripe-elements';\nimport { newPayment } from \"../actions/currentPayments\";\n\n//form data available in local state or store? \n//class component, local state holding \nconst PaymentNew = (props) => {\n\n  const [form, setForm] = useState({\n    amount: ''\n  });\n\n  console.log(this.props)\n  \n  const accountId = this.props\n\n\tconst handlePaymentFormChange = (event, target) => {\n     setForm({\n      ...form,\n     [target]: event.target.value, \n    });\n  }\n\n\n\tconst handlePaymentFormSubmit = (event, accountId) => {\n       event.preventDefault()\n       newPayment(form)\n\t}\n\n\treturn (\n\t\t<div className=\"NewPayment\">\n        <h1>New Payment</h1>\n        <form onSubmit={handlePaymentFormSubmit}>\n          <input\n            placeholder=\"amount\"\n            type=\"text\"\n            name=\"amount\"\n            autoComplete=\"on\"\n            value={form.amount}\n            onChange={(event)=> handlePaymentFormChange(event, \"amount\")}\n          /><br/>\n          <input\n            placeholder=\"cardnumber\"\n            type=\"text\"\n            name=\"card number\"\n            autoComplete=\"on\"\n            value={form.cardnumber}\n            onChange={(event)=> handlePaymentFormChange(event, \"cardnumber\")}\n          /><br/>\n          <input\n            placeholder=\"expiration\"\n            type=\"text\"\n            name=\"expiration\"\n            autoComplete=\"on\"\n            value={form.expiry}\n            onChange={(event)=> handlePaymentFormChange(event, \"expiration\")}\n          /><br/>\n          <input\n            placeholder=\"cvc\"\n            type=\"text\"\n            name=\"cvc\"\n            autoComplete=\"on\"\n            value={form.cvc}\n            onChange={(event)=> handlePaymentFormChange(event, \"cvc\")}\n          /><br/>\n        <button placeholder=\"submit\" type=\"submit\">\n            Make Payment\n          </button> \n          <br></br>     \n          <br></br>             \n          <div>\n          </div>\n          </form>\n          <div>\n        </div>\n      </div>\n\t)\n}\n\n/*function InjectedCheckoutForm() {\n  return (\n    <ElementsConsumer>\n      {({ stripe, elements }) => (\n        <CheckoutForm stripe={stripe} elements={elements} />\n      )}\n    </ElementsConsumer>\n  );\n}*/\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form \n  };\n};\n\nexport default withRouter(connect(mapStateToProps, { currentPayments } ), injectStripe(PaymentNew));\n"]},"metadata":{},"sourceType":"module"}