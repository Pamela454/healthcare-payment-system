{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\"; //import Departments from './components/Departments'\n//import React, { useState } from 'react';\n\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux';\nimport { loggedIn } from \"./actions/currentAccount.js\";\nimport \"./App.css\"; //import Logout from './components/registrations/Logout';\n\nimport { Elements, CardElement } from \"@stripe/react-stripe-js\";\nimport PaymentNew from './components/PaymentNew';\nimport AccountContainer from './containers/AccountContainer';\nimport Navbar from './components/Navbar';\nimport DepartmentsContainer from './containers/DepartmentsContainer';\nimport Login from './components/registrations/Login';\nimport Signup from './components/registrations/Signup'; //if constantly passing down props consider connecting to the store\n\nclass App extends Component {\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n  render() {\n    const currentAccount = localStorage.getItem(\"loggedIn\");\n    const stripe = loadStripe(\"{PUBLIC-KEY}\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, currentAccount ? `Logged in as ${this.props.loginFormReducer.attributes.name}` : \"Not logged in\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/login\",\n      render: props => /*#__PURE__*/React.createElement(Login, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/api/v1/signup\",\n      render: props => /*#__PURE__*/React.createElement(Signup, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      from: \"/logout\",\n      to: \"api/v1/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(AccountContainer, Object.assign({}, props, {\n          account: currentAccount,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 20\n          }\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id/departments\",\n      render: props => {\n        return /*#__PURE__*/React.createElement(DepartmentsContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 20\n          }\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/accounts/:id/payments/new\",\n      render: props => /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Elements, {\n        stripe: stripe,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }\n      }, /*#__PURE__*/React.createElement(PaymentNew, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      })))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), currentAccount ? /*#__PURE__*/React.createElement(Navbar, {\n      account: currentAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 29\n      }\n    }) : null);\n  }\n\n} //gives access to part of store \n//receives entire state as it's argument \n\n\nconst mapStateToProps = state => {\n  //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}; //could be changed to anonymous arrow function \n//dispatch is injected as a prop\n\n\nexport default withRouter(connect(mapStateToProps, {\n  loggedIn\n})(App)); // specifies component to provide data to.","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","useState","Switch","Route","Redirect","withRouter","loadStripe","connect","loggedIn","Elements","CardElement","PaymentNew","AccountContainer","Navbar","DepartmentsContainer","Login","Signup","App","componentDidMount","localStorage","getItem","props","history","render","currentAccount","stripe","loginFormReducer","attributes","name","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,OAAO,WAAP,C,CACA;;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,yBAAtC;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,oBAAP,MAAiC,mCAAjC;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBjB,SAAlB,CAA4B;AAE1BkB,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpCZ,MAAAA,QAAQ,CAAC,KAAKa,KAAL,CAAWC,OAAZ,CAAR;AACD;AACF;;AAGDC,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAGL,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAvB;AACA,UAAMK,MAAM,GAAGnB,UAAU,CAAC,cAAD,CAAzB;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMkB,cAAc,GACvB,gBAAe,KAAKH,KAAL,CAAWK,gBAAX,CAA4BC,UAA5B,CAAuCC,IAAK,EADpC,GAExB,eAFI,CADN,eAIE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAkC,MAAA,MAAM,EAAEP,KAAK,iBAAM,oBAAC,KAAD,oBAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,gBAAlB;AAAmC,MAAA,MAAM,EAAEA,KAAK,iBAAM,oBAAC,MAAD,oBAAYA,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,eAAlB;AAAkC,MAAA,MAAM,EAAEA,KAAK,IAAI;AACjD,4BAAO,oBAAC,gBAAD,oBAAsBA,KAAtB;AAA6B,UAAA,OAAO,EAAEG,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAOE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,2BAAlB;AAA8C,MAAA,MAAM,EAAEH,KAAK,IAAI;AAC7D,4BAAO,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,4BAAlB;AAA+C,MAAA,MAAM,EAAEA,KAAK,iBAC5D,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAEI,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC,oBAAC,UAAD,oBAAgBJ,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADD,CADD,CADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CANF,EAuBKG,cAAc,gBAAG,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEA,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAwC,IAvB3D,CADF;AA2BD;;AAxCyB,C,CA0C5B;AACA;;;AACA,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAAE;AACjC,SAAO,EAAE;AACP,OAAGA;AADE,GAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,eAAezB,UAAU,CAACE,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAAuCS,GAAvC,CAAD,CAAzB,C,CAAwE","sourcesContent":["import React, { Component, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\n//import Departments from './components/Departments'\n//import React, { useState } from 'react';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux'\nimport { loggedIn } from \"./actions/currentAccount.js\"\nimport \"./App.css\";\n//import Logout from './components/registrations/Logout';\nimport { Elements, CardElement } from \"@stripe/react-stripe-js\";\nimport PaymentNew from './components/PaymentNew'\nimport AccountContainer from './containers/AccountContainer'\nimport Navbar from './components/Navbar'\nimport DepartmentsContainer from './containers/DepartmentsContainer'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\n\n//if constantly passing down props consider connecting to the store\n\nclass App extends Component {\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n\n  render() {\n    const currentAccount = localStorage.getItem(\"loggedIn\");\n    const stripe = loadStripe(\"{PUBLIC-KEY}\");\n\n    return (\n      <div className=\"App\">\n            <h2>{ currentAccount ? \n        `Logged in as ${this.props.loginFormReducer.attributes.name}` :\n        \"Not logged in\" }</h2> \n        <div className=\"App\">\n    </div>\n        <Switch>   \n          <Route exact path='/api/v1/login' render={props => ( <Login {...props}/>)}/>\n          <Route exact path='/api/v1/signup' render={props => ( <Signup {...props}/>)}/>\n          <Redirect from=\"/logout\" to=\"api/v1/login\" />\n          <Route exact path='/accounts/:id' render={props => {\n            return <AccountContainer {...props} account={currentAccount}/>\n          } }/>\n          <Route exact path='/accounts/:id/departments' render={props => {\n            return <DepartmentsContainer/>\n          } }/>\n          <Route exact path='/accounts/:id/payments/new' render={props => ( \n          <React.Fragment>\n           <Elements stripe={stripe}>\n            <PaymentNew {...props}/>\n          </Elements>\n          </React.Fragment> )}/>\n        </Switch>\n         { currentAccount ? <Navbar account={currentAccount}/> : null } \n    </div>\n    );\n  }\n}\n//gives access to part of store \n//receives entire state as it's argument \nconst mapStateToProps = state => { //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}\n//could be changed to anonymous arrow function \n//dispatch is injected as a prop\nexport default withRouter(connect(mapStateToProps, { loggedIn })(App)); // specifies component to provide data to. "]},"metadata":{},"sourceType":"module"}