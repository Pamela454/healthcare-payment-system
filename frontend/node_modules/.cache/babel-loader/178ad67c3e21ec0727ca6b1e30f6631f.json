{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { signup } from \"../../actions/currentAccount\";\n\nconst Signup = ({\n  name,\n  password,\n  status,\n  signup,\n  history\n}) => {\n  _s();\n\n  const [signupFormData, setForm] = useState({\n    name: '',\n    password: '',\n    status: ''\n  });\n\n  const handleChange = (event, target) => {\n    const {\n      name,\n      status,\n      value\n    } = event.target;\n    const formData = { ...signupFormData,\n      [name]: value,\n      [status]: value\n    };\n    signup(formData);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    signup(signupFormData, history);\n  }; //axios.post('http://localhost:3001/signup', {account}, {withCredentials: true})\n  //.then(response => {\n  //if (response.data.status === 'created') {\n  //this.props.handleLogin(response.data)\n  //this.redirect()\n  //} else {\n  // this.setState({\n  //errors: response.data.errors\n  //})\n  //}\n  //})\n  //.catch(error => console.log('api errors:', error))\n  //};\n  //redirect = () => {\n  //this.props.history.push('/')\n  //}\n  //handleErrors = () => {\n  //return (\n  //<div>\n  //<ul>{this.state.errors.map((error) => {\n  //return <li>key={error}>{error}</li>\n  //})}\n  //</ul> \n  //</div>\n  //)\n  //};\n  //add password confirmation to form. \n  //render() {\n  //const {name, password, status} = this.state\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"name\",\n    type: \"text\",\n    name: \"name\",\n    value: signupFormData.name,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: signupFormData.password,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"status\",\n    type: \"text\",\n    name: \"status\",\n    value: signupFormData.status,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    placeholder: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Sign Up\")));\n};\n\n_s(Signup, \"v3qGZMkqBQVJbR/X26Jr9+Ob6kA=\");\n\n_c = Signup;\n\nconst mapStateToProps = state => {\n  //what portion of state to provide to props \n  return {\n    signupFormData: state.signupForm\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signup\n})(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Signup.js"],"names":["React","useState","connect","withRouter","signup","Signup","name","password","status","history","signupFormData","setForm","handleChange","event","target","value","formData","handleSubmit","preventDefault","mapStateToProps","state","signupForm"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { signup } from \"../../actions/currentAccount\";\n\n\nconst Signup = ({ name, password, status, signup, history }) => {\n  const [signupFormData, setForm] = useState({\n    name: '',\n    password: '',\n    status: ''\n  });\n\n  const handleChange = (event, target) => {\n    const { name, status, value } = event.target;\n    const formData = {\n      ...signupFormData, \n      [name]: value,\n      [status]: value\n    };\n    signup(formData);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    signup(signupFormData, history);\n  };\n\n  //axios.post('http://localhost:3001/signup', {account}, {withCredentials: true})\n    //.then(response => {\n      //if (response.data.status === 'created') {\n        //this.props.handleLogin(response.data)\n        //this.redirect()\n      //} else {\n       // this.setState({\n          //errors: response.data.errors\n        //})\n      //}\n    //})\n    //.catch(error => console.log('api errors:', error))\n//};\n\n//redirect = () => {\n    //this.props.history.push('/')\n  //}\n\n//handleErrors = () => {\n    //return (\n      //<div>\n        //<ul>{this.state.errors.map((error) => {\n          //return <li>key={error}>{error}</li>\n        //})}\n        //</ul> \n      //</div>\n    //)\n//};\n//add password confirmation to form. \n\n//render() {\n    //const {name, password, status} = this.state\n  return (\n    <div>\n      <h1>Sign Up</h1>         \n        <form onSubmit={handleSubmit}>\n          <input\n            placeholder=\"name\"\n            type=\"text\"\n            name=\"name\"\n            value={signupFormData.name}\n            onChange={handleChange}\n          /><br/>\n          <input \n            placeholder=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={signupFormData.password}\n            onChange={handleChange}\n          /><br/>  \n         <input \n            placeholder=\"status\"\n            type=\"text\"\n            name=\"status\"\n            value={signupFormData.status}\n            onChange={handleChange}\n          /><br/>                 \n          <button placeholder=\"submit\" type=\"submit\">\n            Sign Up\n          </button>\n        </form>\n      </div>\n  );\n};\n\nconst mapStateToProps = state => { //what portion of state to provide to props \n  return {\n    signupFormData: state.signupForm \n  };\n};\n\n\nexport default connect(mapStateToProps, { signup })(Signup);"]},"metadata":{},"sourceType":"module"}