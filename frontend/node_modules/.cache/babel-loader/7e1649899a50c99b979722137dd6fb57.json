{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Departments from './components/Departments'; //import React, { useState } from 'react';\n//import { connect } from 'react-redux'\n\nimport { getCurrentUser } from \"./actions/setCurrentAccount.js\"; //import Payments from './components/Payments'\n\nimport AccountContainer from './containers/AccountContainer';\nimport Navbar from './components/Navbar';\nimport Login from './components/registrations/Login';\nimport Logout from './components/registrations/Logout';\nimport Signup from './components/registrations/Signup'; //if constantly passing down props consider connecting to the store\n\nclass App extends Component {\n  componentDidMount() {\n    //can set state which then causes an update \n    this.props.currentAccount(); //does this need to be a hook? \n  }\n\n  render() {\n    const {\n      currentAccount\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, currentAccount ? `Logged in as ${currentAccount.name}` : \"Not logged in\"), /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/React.createElement(Login, {\n        name: currentAccount.name,\n        password: currentAccount.password,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 48\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => /*#__PURE__*/React.createElement(Signup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 54\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/account\",\n      render: routerProps => /*#__PURE__*/React.createElement(AccountContainer, Object.assign({}, routerProps, {\n        accounts: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }))), currentAccount ? /*#__PURE__*/React.createElement(Logout, {\n      logout: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getDepartments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Departments\"), currentAccount ? /*#__PURE__*/React.createElement(Departments, {\n      departments: currentAccount.departments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }) : null);\n  }\n\n} //receives entire state as it's argument \n\n\nconst mapStateToProps = ({\n  currentAccount\n}) => {\n  //what portion of state to provide to props \n  return {\n    //executed with each change to the store. \n    currentAccount\n  };\n}; //need to add in currentAccount action\n\n\nexport default connect(mapStateToProps, {\n  getCurrentUser\n})(App); // specifies component to provide data to.","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Departments","getCurrentUser","AccountContainer","Navbar","Login","Logout","Signup","App","componentDidMount","props","currentAccount","render","name","password","routerProps","state","currentUser","logout","getDepartments","departments","mapStateToProps","connect"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Departments from './components/Departments'\n//import React, { useState } from 'react';\n//import { connect } from 'react-redux'\nimport { getCurrentUser } from \"./actions/setCurrentAccount.js\"\n//import Payments from './components/Payments'\nimport AccountContainer from './containers/AccountContainer'\nimport Navbar from './components/Navbar'\nimport Login from './components/registrations/Login'\nimport Logout from './components/registrations/Logout'\nimport Signup from './components/registrations/Signup'\n\n//if constantly passing down props consider connecting to the store\n\nclass App extends Component {\n\n  componentDidMount() { //can set state which then causes an update \n    this.props.currentAccount(); //does this need to be a hook? \n  }\n\n\n\n  render() {\n    const { currentAccount } = this.props  \n\n    return (\n      <div className=\"App\">\n          <h2>{ currentAccount ? \n        `Logged in as ${currentAccount.name}`  :\n        \"Not logged in\" } \n         </h2> \n       <Router>\n        <Navbar/>\n        <Switch> \n          <Route exact path='/' render={() => (<Login \n            name={currentAccount.name} \n            password={currentAccount.password} \n            />)}/>\n          <Route exact path='/signup' render={() => (<Signup/>)}/>\n          <Route exact path='/account' render={routerProps => <AccountContainer {...routerProps} accounts={this.state.currentUser}/>} />\n        </Switch>\n       </Router>\n         { currentAccount ? \n          <Logout logout={this.logout}/> : null }\n          <button onClick={this.getDepartments}>Departments</button>\n         { currentAccount ? <Departments departments={currentAccount.departments} /> : null } \n    </div>\n    );\n  }\n}\n//receives entire state as it's argument \nconst mapStateToProps = ({ currentAccount }) => { //what portion of state to provide to props \n  return { //executed with each change to the store. \n    currentAccount\n  };\n}\n//need to add in currentAccount action\nexport default connect (mapStateToProps, { getCurrentUser })(App); // specifies component to provide data to. "]},"metadata":{},"sourceType":"module"}