{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js\",\n    _s = $RefreshSig$();\n\n//import React from 'react';\nimport React, { useState } from 'react';\nimport { compose } from 'redux';\nimport { login } from \"../../actions/setCurrentAccount\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentAccount } from \"../../actions/setCurrentAccount\"; //useForm hook? \n//value of form input is determined by the state, state dictated by input field values\n// only use hooks with function components \n\nconst Login = ({\n  login,\n  name,\n  password,\n  setCurrentAccount\n}) => {\n  _s();\n\n  const [form, setState] = useState({\n    name: '',\n    password: ''\n  });\n\n  const handleLoginFormChange = event => {\n    setState({ ...form,\n      [event.target.name]: event.target.value,\n      [event.target.password]: event.target.value\n    });\n  };\n\n  const handleLoginFormSubmit = event => {\n    event.preventDefault(); //state contains most up to date form data. prevent page refresh \n\n    login(form);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLoginFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"name\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"on\",\n    value: form.name,\n    onChange: handleLoginFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"password\",\n    type: \"password\" //can't see type\n    ,\n    name: \"password\",\n    autoComplete: \"on\",\n    value: form.password,\n    onChange: handleLoginFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    placeholder: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }));\n}; // persists changes in the state. \n\n\n_s(Login, \"gEktrtxpaGbWoft09sxVRaQAdLg=\");\n\n_c = Login;\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form\n  };\n};\n\nexport default compose(withRouter, connect(mapStateToProps, {\n  login,\n  setCurrentAccount\n}))(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js"],"names":["React","useState","compose","login","withRouter","connect","setCurrentAccount","Login","name","password","form","setState","handleLoginFormChange","event","target","value","handleLoginFormSubmit","preventDefault","mapStateToProps","state"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,KAAT,QAAsB,iCAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,iCAAlC,C,CAEA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEJ,EAAAA,KAAF;AAASK,EAAAA,IAAT;AAAeC,EAAAA,QAAf;AAAyBH,EAAAA;AAAzB,CAAD,KAAkD;AAAA;;AAC9D,QAAM,CAACI,IAAD,EAAOC,QAAP,IAAmBV,QAAQ,CAAC;AAChCO,IAAAA,IAAI,EAAE,EAD0B;AAEhCC,IAAAA,QAAQ,EAAE;AAFsB,GAAD,CAAjC;;AAKA,QAAMG,qBAAqB,GAAGC,KAAK,IAAI;AACtCF,IAAAA,QAAQ,CAAC,EACR,GAAGD,IADK;AAER,OAACG,KAAK,CAACC,MAAN,CAAaN,IAAd,GAAqBK,KAAK,CAACC,MAAN,CAAaC,KAF1B;AAGR,OAACF,KAAK,CAACC,MAAN,CAAaL,QAAd,GAAyBI,KAAK,CAACC,MAAN,CAAaC;AAH9B,KAAD,CAAR;AAKA,GAND;;AAQF,QAAMC,qBAAqB,GAAGH,KAAK,IAAI;AACnCA,IAAAA,KAAK,CAACI,cAAN,GADmC,CACZ;;AACvBd,IAAAA,KAAK,CAACO,IAAD,CAAL;AACD,GAHH;;AAME,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,IAAA,QAAQ,EAAEM,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAC,IAJf;AAKE,IAAA,KAAK,EAAEN,IAAI,CAACF,IALd;AAME,IAAA,QAAQ,EAAEI,qBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASA;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,IAAI,EAAC,UAFT,CAEoB;AAFpB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,YAAY,EAAC,IAJjB;AAKI,IAAA,KAAK,EAAEF,IAAI,CAACD,QALhB;AAMI,IAAA,QAAQ,EAAEG,qBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAiBA;AAAQ,IAAA,WAAW,EAAC,QAApB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAFF,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADJ;AA8BD,CAlDD,C,CAqDA;;;GArDML,K;;KAAAA,K;;AAsDN,MAAMW,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,IAAI,EAAES,KAAK,CAACT;AADP,GAAP;AAGD,CAJD;;AAOA,eAAeR,OAAO,CAACE,UAAD,EACpBC,OAAO,CAACa,eAAD,EAAkB;AACvBf,EAAAA,KADuB;AAEvBG,EAAAA;AAFuB,CAAlB,CADa,CAAP,CAITC,KAJS,CAAf","sourcesContent":["//import React from 'react';\nimport React, { useState } from 'react';\nimport { compose } from 'redux';\nimport { login } from \"../../actions/setCurrentAccount\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { setCurrentAccount } from \"../../actions/setCurrentAccount\";\n\n//useForm hook? \n//value of form input is determined by the state, state dictated by input field values\n// only use hooks with function components \nconst Login = ({ login, name, password, setCurrentAccount }) => {\n  const [form, setState] = useState({\n    name: '',\n    password: ''\n  });\n\n  const handleLoginFormChange = event => {\n   setState({\n    ...form,\n    [event.target.name]: event.target.value, \n    [event.target.password]: event.target.value \n   });\n  }\n\nconst handleLoginFormSubmit = event => {\n    event.preventDefault() //state contains most up to date form data. prevent page refresh \n    login(form); \n  }\n\n\n  return (\n      <div className=\"Login\">\n        <h1>Log In</h1>\n        <form onSubmit={handleLoginFormSubmit}>\n          <input\n            placeholder=\"name\"\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"on\"\n            value={form.name}\n            onChange={handleLoginFormChange}\n          /><br/>\n        <input\n            placeholder=\"password\"\n            type=\"password\" //can't see type\n            name=\"password\"\n            autoComplete=\"on\"\n            value={form.password}\n            onChange={handleLoginFormChange}\n          /><br/>          \n        <button placeholder=\"submit\" type=\"submit\">\n            Log In\n          </button>          \n          <div>\n          </div>\n          </form>\n          <div>\n        </div>\n      </div>\n  );\n}\n\n\n// persists changes in the state. \nconst mapStateToProps = state => {\n  return {\n    form: state.form \n  };\n};\n\n\nexport default compose(withRouter, \n  connect(mapStateToProps, { \n    login, \n    setCurrentAccount \n  }))(Login)"]},"metadata":{},"sourceType":"module"}