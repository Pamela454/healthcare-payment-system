{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js\";\nimport React from 'react';\nimport { login } from \"../../actions/accountLogin\"; //import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\"; //could be combined with signup\n//convert to pure component? \n//value of form input is determined by the state, state dictated by input field values\n\nconst Login = ({\n  handleLoginFormChange,\n  handleChange,\n  handleLoginFormSubmit,\n  name,\n  password,\n  setCurrentAccount\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLoginFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"name\",\n    type: \"text\",\n    name: \"name\",\n    autoComplete: \"on\",\n    value: name,\n    onChange: handleLoginFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"password\",\n    type: \"password\" //can't see type\n    ,\n    name: \"password\",\n    autoComplete: \"on\",\n    value: password,\n    onChange: handleLoginFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    placeholder: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"Log In\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }));\n};\n\n_c = Login;\nexport const setCurrentAccount = account => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account: account\n  };\n}; //function NoMatch() {\n//let location = useLocation();\n//return (\n//<div>\n//<h3>\n//No match for <code>{location.pathname}</code>\n//</h3>\n//</div>\n//);\n//}\n// persists changes in the state. \n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //calls action, reducer and then makes a change to state \n    setCurrentAccount: account => {\n      dispatch(setCurrentAccount(account));\n    } //login: (credentials, history) => dispatch(login(credentials, history)),\n\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js"],"names":["React","login","connect","Login","handleLoginFormChange","handleChange","handleLoginFormSubmit","name","password","setCurrentAccount","account","type","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,4BAAtB,C,CACA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,qBAAF;AAAyBC,EAAAA,YAAzB;AAAuCC,EAAAA,qBAAvC;AAA8DC,EAAAA,IAA9D;AAAoEC,EAAAA,QAApE;AAA8EC,EAAAA;AAA9E,CAAD,KAAuG;AACnH,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAM,IAAA,QAAQ,EAAEH,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,YAAY,EAAC,IAJf;AAKE,IAAA,KAAK,EAAEC,IALT;AAME,IAAA,QAAQ,EAAEH,qBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eASA;AACI,IAAA,WAAW,EAAC,UADhB;AAEI,IAAA,IAAI,EAAC,UAFT,CAEoB;AAFpB;AAGI,IAAA,IAAI,EAAC,UAHT;AAII,IAAA,YAAY,EAAC,IAJjB;AAKI,IAAA,KAAK,EAAEI,QALX;AAMI,IAAA,QAAQ,EAAEJ,qBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATA,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ,eAiBA;AAAQ,IAAA,WAAW,EAAC,QAApB;AAA6B,IAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBA,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,CAFF,eAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBJ,CADJ;AA+BD,CAhCD;;KAAMD,K;AAmCN,OAAO,MAAMM,iBAAiB,GAAIC,OAAD,IAAa;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAE,qBADD;AAELD,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM,C,CAOP;AACE;AAEA;AACE;AACE;AACE;AACF;AACF;AACF;AACF;AACA;;AACA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AAAG;AACRJ,IAAAA,iBAAiB,EAAGC,OAAD,IAAa;AAC5BG,MAAAA,QAAQ,CAACJ,iBAAiB,CAACC,OAAD,CAAlB,CAAR;AACH,KAHI,CAKL;;AALK,GAAP;AAOD,CARD;;AAWA,eAAeR,OAAO,CAAC,IAAD,EAAOU,kBAAP,CAAP,CAAkCT,KAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { login } from \"../../actions/accountLogin\";\n//import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\n//could be combined with signup\n//convert to pure component? \n//value of form input is determined by the state, state dictated by input field values\nconst Login = ({ handleLoginFormChange, handleChange, handleLoginFormSubmit, name, password, setCurrentAccount }) => {\n  return (\n      <div className=\"Login\">\n        <h1>Log In</h1>\n        <form onSubmit={handleLoginFormSubmit}>\n          <input\n            placeholder=\"name\"\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"on\"\n            value={name}\n            onChange={handleLoginFormChange}\n          /><br/>\n        <input\n            placeholder=\"password\"\n            type=\"password\" //can't see type\n            name=\"password\"\n            autoComplete=\"on\"\n            value={password}\n            onChange={handleLoginFormChange}\n          /><br/>          \n        <button placeholder=\"submit\" type=\"submit\">\n            Log In\n          </button>          \n          <div>\n          </div>\n          </form>\n          <div>\n        </div>\n      </div>\n  );\n\n}\n\n\nexport const setCurrentAccount = (account) => {\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account: account\n  };\n};\n\n//function NoMatch() {\n  //let location = useLocation();\n\n  //return (\n    //<div>\n      //<h3>\n        //No match for <code>{location.pathname}</code>\n      //</h3>\n    //</div>\n  //);\n//}\n// persists changes in the state. \nconst mapDispatchToProps = (dispatch) => {\n  return {  //calls action, reducer and then makes a change to state \n    setCurrentAccount: (account) => {\n        dispatch(setCurrentAccount(account))\n    },\n\n    //login: (credentials, history) => dispatch(login(credentials, history)),\n  };\n};\n\n\nexport default connect(null, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}