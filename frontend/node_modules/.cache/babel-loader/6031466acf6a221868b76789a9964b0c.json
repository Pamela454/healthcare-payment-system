{"ast":null,"code":"export const newPayment = (paymentData, history) => {\n  return dispatch => {\n    console.log(paymentData);\n    return fetch(`http://localhost:3001/api/v1/accounts/${id}/payments/new`, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(paymentData)\n    }).then(response => response.json()).then(payment => {\n      console.log(payment);\n\n      if (payment.error) {\n        alert(\"error\");\n      } else {\n        console.log(\"payment.data is: \" + JSON.stringify(payment.data));\n        dispatch({\n          type: \"ADD_PAYMENT\",\n          payload: payment\n        });\n        history.push(`/accounts/${history}`);\n      }\n    });\n  };\n};\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js"],"names":["newPayment","paymentData","history","dispatch","console","log","fetch","id","method","credentials","headers","body","JSON","stringify","then","response","json","payment","error","alert","data","type","payload","push"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAClD,SAAQC,QAAD,IAAc;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,WAAOK,KAAK,CAAE,yCAAwCC,EAAG,eAA7C,EAA6D;AACvEC,MAAAA,MAAM,EAAE,MAD+D;AAEvEC,MAAAA,WAAW,EAAE,aAF0D;AAGvEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAH8D;AAMvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,WAAf;AANiE,KAA7D,CAAL,CAQJa,IARI,CAQEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EARf,EASJF,IATI,CASEG,OAAD,IAAa;AACjBb,MAAAA,OAAO,CAACC,GAAR,CAAYY,OAAZ;;AACA,UAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAFD,MAEO;AACLf,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBO,IAAI,CAACC,SAAL,CAAeI,OAAO,CAACG,IAAvB,CAAlC;AACAjB,QAAAA,QAAQ,CAAC;AAAEkB,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,OAAO,EAAEL;AAAhC,SAAD,CAAR;AACAf,QAAAA,OAAO,CAACqB,IAAR,CAAc,aAAYrB,OAAQ,EAAlC;AACD;AACF,KAlBI,CAAP;AAmBD,GArBD;AAsBD,CAvBM;AAyBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const newPayment = (paymentData, history) => {\n  return (dispatch) => {\n    console.log(paymentData);\n    return fetch(`http://localhost:3001/api/v1/accounts/${id}/payments/new`, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(paymentData),\n    })\n      .then((response) => response.json())\n      .then((payment) => {\n        console.log(payment);\n        if (payment.error) {\n          alert(\"error\");\n        } else {\n          console.log(\"payment.data is: \" + JSON.stringify(payment.data));\n          dispatch({ type: \"ADD_PAYMENT\", payload: payment });\n          history.push(`/accounts/${history}`);\n        }\n      });\n  };\n};\n\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */\n"]},"metadata":{},"sourceType":"module"}