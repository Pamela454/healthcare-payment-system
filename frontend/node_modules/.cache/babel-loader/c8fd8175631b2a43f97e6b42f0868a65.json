{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport React from 'react';\nimport { useHistory } from 'react-router-dom'; //import {Redirect} from \"react-router-dom\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\nimport { getDepartments } from \".././actions/currentDepartments.js\"; //import DepartmentsContainer from '../containers/DepartmentsContainer'\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \n\nconst Account = props => {\n  _s();\n\n  //let account = props.accounts[props.match.params.id - 1]\n  //do you need a key?, only if iterating \n  //do I need a default balance of 0 when creating a new account? \n  const accountId = props.account.id;\n  let history = useHistory();\n\n  const handleClick = e => {\n    //const { accountId } = e.target;\n    //const accountId = props.account.id\n    e.persist();\n    console.log(history);\n    e.preventDefault();\n    props.getDepartments(props.account.id, history);\n  }; //add value to button? \n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \" Account Name \"), props.account ? ` - ` + props.account.attributes.name : null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \" Account Balance \"), props.account ? `$` + props.account.attributes.balance : null), /*#__PURE__*/React.createElement(Link, {\n    to: `/accounts/${accountId}/departments`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"View Departments\")));\n};\n\n_s(Account, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Account;\nexport default withRouter(connect(null, {\n  getDepartments\n})(Account));\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js"],"names":["Link","connect","React","useHistory","withRouter","Button","getDepartments","Account","props","accountId","account","id","history","handleClick","e","persist","console","log","preventDefault","attributes","name","balance"],"mappings":";;;AAAA,SAAQA,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,OAAO,GAAKC,KAAF,IAAa;AAAA;;AAC5B;AACD;AACA;AACE,QAAMC,SAAS,GAAGD,KAAK,CAACE,OAAN,CAAcC,EAAhC;AACA,MAAIC,OAAO,GAAGT,UAAU,EAAxB;;AAEE,QAAMU,WAAW,GAAIC,CAAD,IAAO;AACvB;AACA;AACAA,IAAAA,CAAC,CAACC,OAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAE,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,KAAK,CAACF,cAAN,CAAqBE,KAAK,CAACE,OAAN,CAAcC,EAAnC,EAAuCC,OAAvC;AACH,GAPD,CAPyB,CAe7B;;;AACA,sBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,EAC+BJ,KAAK,CAACE,OAAN,GAAgB,KAAD,GAAQF,KAAK,CAACE,OAAN,CAAcS,UAAd,CAAyBC,IAAhD,GAAuD,IADtF,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFD,EAEkCZ,KAAK,CAACE,OAAN,GAAiB,GAAD,GAAMF,KAAK,CAACE,OAAN,CAAcS,UAAd,CAAyBE,OAA/C,GAAyD,IAF3F,CADJ,eAKO,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYZ,SAAU,cAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CALP,CADD;AAYC,CA5BD;;GAAMN,O;UAKUJ,U;;;KALVI,O;AAgCN,eAAeH,UAAU,CAACH,OAAO,CAAC,IAAD,EAAO;AAAEK,EAAAA;AAAF,CAAP,CAAP,CAAmCC,OAAnC,CAAD,CAAzB","sourcesContent":["import {Link} from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport React from 'react'\nimport { useHistory } from 'react-router-dom';\n//import {Redirect} from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap'\nimport { getDepartments } from \".././actions/currentDepartments.js\"\n//import DepartmentsContainer from '../containers/DepartmentsContainer'\n\n//does not go through lifecycle checks, functional component\n//cannot store state\n//takes props as an argument and returns a react element \n//returns JSX instead of using render method \n//updates based on prop changes or if parent component rerenders \n//can't use hooks\n//can't use this.state \nconst Account = ( props ) => {\n\t//let account = props.accounts[props.match.params.id - 1]\n//do you need a key?, only if iterating \n//do I need a default balance of 0 when creating a new account? \n  const accountId = props.account.id\n  let history = useHistory();\n\n    const handleClick = (e) => {\n        //const { accountId } = e.target;\n        //const accountId = props.account.id\n        e.persist()\n        console.log(history)\n        e.preventDefault();\n        props.getDepartments(props.account.id, history)\n    }\n//add value to button? \nreturn (\n\t<div>\n     <h2>\n     \t<label> Account Name </label>{props.account? ` - ` + props.account.attributes.name : null} \n     \t<label> Account Balance </label>{props.account ? `$` + props.account.attributes.balance : null}\n     </h2>\n        <Link to={`/accounts/${accountId}/departments`}>\n        <Button onClick={handleClick}>View Departments</Button>\n        </Link>\n     </div>\n\t)\n\n}\n\n\n\nexport default withRouter(connect(null, { getDepartments } )(Account)); "]},"metadata":{},"sourceType":"module"}