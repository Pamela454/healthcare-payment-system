{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport Departments from './components/Departments';\nimport Payments from './components/Payments';\nimport AccountContainer from './containers/AccountContainer';\nimport Navbar from './components/NavBar';\nimport Login from './components/registrations/Login';\nimport Logout from './components/registrations/Logout';\nimport { connect } from 'react-redux'; //import { getCurrentUser } from \"./actions/currentUser.js\"\n\nimport Signup from './components/registrations/Signup'; //if constantly passing down props consider connecting to the store\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleLoginFormChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        loginForm: { ...this.state.loginForm,\n          [name]: value\n        }\n      });\n    };\n\n    this.handleLoginFormSubmit = event => {\n      event.preventDefault(); //state contains most up to date form data\n\n      const userInfo = this.state.loginForm;\n      const headers = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          user: userInfo\n        })\n      };\n      fetch(\"http://localhost:3001/api/v1/login\", headers).then(r => r.json()).then(userJSON => {\n        if (userJSON.error) {\n          alert(\"invalid credentials\");\n        } else {\n          this.setState({\n            currentUser: userJSON,\n            loginForm: {\n              name: \"\",\n              password: \"\"\n            }\n          });\n        }\n      }).catch(console.log);\n    };\n\n    this.logout = event => {\n      event.preventDefault();\n      localStorage.removeItem(\"token\");\n      this.setState({\n        currentUser: null,\n        secrets: []\n      });\n    };\n\n    this.getDepartments = () => {\n      fetch(`http://localhost:3001/api/v1/accounts/${this.state.currentUser.account_id}/departments`).then(r => r.json()).then(console.log).then(userJSON => {\n        if (userJSON.error) {}\n      });\n    };\n\n    this.state = {\n      currentUser: null,\n      loginForm: {\n        name: \"\",\n        password: \"\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n        headers: {\n          \"Authorization\": token\n        }\n      }).then(r => r.json()).then(resp => {\n        if (resp.error) {\n          alert(resp.error);\n        } else {\n          this.setState({\n            currentUser: resp.user\n          });\n        }\n      });\n    }\n  }\n\n  //handleErrors = () => {\n  //return (\n  //<div>\n  //<ul>\n  //{this.state.errors.map(error => {\n  //return <li key={error}>{error}</li>\n  //})}\n  //</ul>\n  //</div>\n  //)\n  //};\n  //handleSubmit = (data) => {\n  //this.setState({\n  //account: data.account \n  //})\n  //this.props.history.push(`/accounts/${this.props.account.id}`);\n  //};\n  render() {\n    const {\n      currentUser\n    } = this.state; //let { path, url } = useRouteMatch();\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, currentUser ? `Logged in as ${currentUser.name}` : \"Not logged in\"), /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      component: Signup,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/account\",\n      render: routerProps => /*#__PURE__*/React.createElement(AccountContainer, Object.assign({}, routerProps, {\n        accounts: this.state.currentUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }))), currentUser ? /*#__PURE__*/React.createElement(Logout, {\n      logout: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(Login, {\n      handleLoginFormChange: this.handleLoginFormChange,\n      handleLoginFormSubmit: this.handleLoginFormSubmit,\n      name: this.state.loginForm.name,\n      password: this.state.loginForm.password,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getDepartments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }, \"Departments\"), currentUser ? /*#__PURE__*/React.createElement(Departments, {\n      departments: currentUser.departments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 26\n      }\n    }) : null);\n  }\n\n}\n\nexport default App; // only one thing to export can use default","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","useParams","useRouteMatch","Departments","Payments","AccountContainer","Navbar","Login","Logout","connect","Signup","App","constructor","handleLoginFormChange","event","name","value","target","setState","loginForm","state","handleLoginFormSubmit","preventDefault","userInfo","headers","method","body","JSON","stringify","user","fetch","then","r","json","userJSON","error","alert","currentUser","password","catch","console","log","logout","localStorage","removeItem","secrets","getDepartments","account_id","componentDidMount","token","getItem","resp","render","routerProps","departments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,EAAuDC,SAAvD,EAAkEC,aAAlE,QAAuF,kBAAvF;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,gBAAP,MAA6B,+BAA7B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,kCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,mCAAnB,C,CAEA;;AAEA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAC1BiB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAiCdC,qBAjCc,GAiCUC,KAAK,IAAI;AAChC,YAAM;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,UAAiBF,KAAK,CAACG,MAA7B;AACC,WAAKC,QAAL,CAAc;AACZC,QAAAA,SAAS,EAAE,EACT,GAAG,KAAKC,KAAL,CAAWD,SADL;AAET,WAACJ,IAAD,GAAQC;AAFC;AADC,OAAd;AAMD,KAzCa;;AAAA,SA2CdK,qBA3Cc,GA2CUP,KAAK,IAAI;AAC/BA,MAAAA,KAAK,CAACQ,cAAN,GAD+B,CACR;;AACvB,YAAMC,QAAQ,GAAG,KAAKH,KAAL,CAAWD,SAA5B;AACA,YAAMK,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE,MADM;AAEdD,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFK;AAKdE,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,UAAAA,IAAI,EAAEN;AADa,SAAf;AALQ,OAAhB;AASAO,MAAAA,KAAK,CAAC,oCAAD,EAAuCN,OAAvC,CAAL,CACCO,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMG,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,KAAb,EAAoB;AAClBC,UAAAA,KAAK,CAAC,qBAAD,CAAL;AACD,SAFD,MAEO;AACL,eAAKlB,QAAL,CAAc;AACZmB,YAAAA,WAAW,EAAEH,QADD;AAEZf,YAAAA,SAAS,EAAE;AACTJ,cAAAA,IAAI,EAAE,EADG;AAETuB,cAAAA,QAAQ,EAAE;AAFD;AAFC,WAAd;AAOD;AACA,OAdH,EAeCC,KAfD,CAeOC,OAAO,CAACC,GAff;AAgBD,KAvEa;;AAAA,SAyEdC,MAzEc,GAyEL5B,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACQ,cAAN;AACAqB,MAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,WAAK1B,QAAL,CAAc;AACZmB,QAAAA,WAAW,EAAE,IADD;AAEZQ,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAhFa;;AAAA,SAkFhBC,cAlFgB,GAkFC,MAAM;AACnBhB,MAAAA,KAAK,CAAE,yCAAwC,KAAKV,KAAL,CAAWiB,WAAX,CAAuBU,UAAW,cAA5E,CAAL,CACChB,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMS,OAAO,CAACC,GAFd,EAGCV,IAHD,CAGMG,QAAQ,IAAI;AAChB,YAAIA,QAAQ,CAACC,KAAb,EAAoB,CACnB;AACF,OAND;AAOH,KA1Fe;;AAEZ,SAAKf,KAAL,GAAa;AACXiB,MAAAA,WAAW,EAAE,IADF;AAEXlB,MAAAA,SAAS,EAAE;AACTJ,QAAAA,IAAI,EAAE,EADG;AAETuB,QAAAA,QAAQ,EAAE;AAFD;AAFA,KAAb;AAOD;;AAEDU,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAGN,YAAY,CAACO,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAGD,KAAH,EAAU;AACRnB,MAAAA,KAAK,CAAC,+CAAD,EAAkD;AACrDN,QAAAA,OAAO,EAAE;AACP,2BAAiByB;AADV;AAD4C,OAAlD,CAAL,CAKClB,IALD,CAKMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EALX,EAMCF,IAND,CAMMoB,IAAI,IAAI;AACZ,YAAIA,IAAI,CAAChB,KAAT,EAAgB;AACdC,UAAAA,KAAK,CAACe,IAAI,CAAChB,KAAN,CAAL;AACD,SAFD,MAEO;AACL,eAAKjB,QAAL,CAAc;AACZmB,YAAAA,WAAW,EAAEc,IAAI,CAACtB;AADN,WAAd;AAGD;AACD,OAdF;AAeC;AACJ;;AA8DD;AACE;AACE;AACE;AACA;AACA;AACE;AACF;AACF;AACF;AACF;AAEF;AACE;AACE;AACF;AACA;AACF;AAGEuB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEf,MAAAA;AAAF,QAAkB,KAAKjB,KAA7B,CADO,CAEP;;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMiB,WAAW,GAChB,gBAAeA,WAAW,CAACtB,IAAK,EADhB,GAEjB,eAFA,CADF,eAKC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,eAEC,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAA2B,MAAA,SAAS,EAAER,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEG,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,UAAlB;AAA6B,MAAA,MAAM,EAAE2C,WAAW,iBAAI,oBAAC,gBAAD,oBAAsBA,WAAtB;AAAmC,QAAA,QAAQ,EAAE,KAAKjC,KAAL,CAAWiB,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFD,CALD,EAaKA,WAAW,gBACZ,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAE,KAAKK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADY,gBAEZ,oBAAC,KAAD;AACA,MAAA,qBAAqB,EAAE,KAAK7B,qBAD5B;AAEA,MAAA,qBAAqB,EAAE,KAAKQ,qBAF5B;AAGA,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWD,SAAX,CAAqBJ,IAH3B;AAIA,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWD,SAAX,CAAqBmB,QAJ/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eAqBI;AAAQ,MAAA,OAAO,EAAE,KAAKQ,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBArBJ,EAsBKT,WAAW,gBAAG,oBAAC,WAAD;AAAa,MAAA,WAAW,EAAEA,WAAW,CAACiB,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA2D,IAtB3E,CADF;AA0BD;;AA/IyB;;AAkJ5B,eAAe3C,GAAf,C,CAAoB","sourcesContent":["import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch } from \"react-router-dom\";\nimport Departments from './components/Departments'\nimport Payments from './components/Payments'\nimport AccountContainer from './containers/AccountContainer'\nimport Navbar from './components/NavBar'\nimport Login from './components/registrations/Login'\nimport Logout from './components/registrations/Logout'\nimport { connect } from 'react-redux'\n//import { getCurrentUser } from \"./actions/currentUser.js\"\nimport Signup from './components/registrations/Signup'\n\n//if constantly passing down props consider connecting to the store\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      currentUser: null,\n      loginForm: {\n        name: \"\",\n        password: \"\"\n     }, \n    }\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\")\n    if(token) {\n      fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n        headers: {\n          \"Authorization\": token\n        }\n      })\n      .then(r => r.json())\n      .then(resp => {\n        if (resp.error) {\n          alert(resp.error)\n        } else {\n          this.setState({\n            currentUser: resp.user \n          })\n        }\n       })\n      }\n  }\n\n\n  handleLoginFormChange = event => {\n   const {name, value } = event.target\n    this.setState({\n      loginForm: {\n        ...this.state.loginForm,\n        [name]: value \n      }\n    })\n  };\n\n  handleLoginFormSubmit = event => {\n    event.preventDefault() //state contains most up to date form data\n    const userInfo = this.state.loginForm\n    const headers = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: userInfo\n      })\n    }\n    fetch(\"http://localhost:3001/api/v1/login\", headers)\n    .then(r => r.json())\n    .then(userJSON => { \n      if (userJSON.error) {\n        alert(\"invalid credentials\") \n      } else {\n        this.setState({\n          currentUser: userJSON,\n          loginForm: {\n            name: \"\",\n            password: \"\"\n          }\n        })\n      }\n      })\n    .catch(console.log)\n  }\n\n  logout = event => {\n    event.preventDefault()\n    localStorage.removeItem(\"token\")\n    this.setState({\n      currentUser: null,\n      secrets: []\n    })\n  }\n\ngetDepartments = () => {\n    fetch(`http://localhost:3001/api/v1/accounts/${this.state.currentUser.account_id}/departments`)\n    .then(r => r.json())\n    .then(console.log)\n    .then(userJSON => { \n      if (userJSON.error) {\n      }\n    })\n}\n\n  //handleErrors = () => {\n    //return (\n      //<div>\n        //<ul>\n        //{this.state.errors.map(error => {\n        //return <li key={error}>{error}</li>\n          //})}\n        //</ul>\n      //</div>\n    //)\n  //};\n\n//handleSubmit = (data) => {\n  //this.setState({\n    //account: data.account \n  //})\n  //this.props.history.push(`/accounts/${this.props.account.id}`);\n//};\n\n\n  render() {\n    const { currentUser } = this.state\n    //let { path, url } = useRouteMatch();\n\n    return (\n      <div className=\"App\">\n        <h2>{ currentUser ?\n        `Logged in as ${currentUser.name}`  :\n        \"Not logged in\" }\n         </h2> \n       <Router>\n        <Navbar/>\n        <Switch> \n          <Route exact path='/login' component={Login}/>\n          <Route exact path='/signup' component={Signup}/>\n          <Route exact path='/account' render={routerProps => <AccountContainer {...routerProps} accounts={this.state.currentUser}/>} />\n        </Switch>\n       </Router>\n         { currentUser ? \n          <Logout logout={this.logout}/> :\n          <Login\n          handleLoginFormChange={this.handleLoginFormChange}\n          handleLoginFormSubmit={this.handleLoginFormSubmit}\n          name={this.state.loginForm.name}\n          password={this.state.loginForm.password}\n          /> }\n          <button onClick={this.getDepartments}>Departments</button>\n         { currentUser ? <Departments departments={currentUser.departments} /> : null }\n    </div>\n    );\n  }\n}\n\nexport default App; // only one thing to export can use default"]},"metadata":{},"sourceType":"module"}