{"ast":null,"code":"export const setDepartments = departments => {\n  console.log(departments);\n  return {\n    type: \"GET_DEPARTMENTS\",\n    payload: departments\n  };\n};\nexport const getDepartments = (accountId, history) => {\n  return dispatch => {\n    console.log(accountId);\n    console.log(history);\n    fetch(`http://localhost:3001/api/v1/accounts/${accountId}/departments`, {\n      method: \"GET\",\n      credentials: 'same-origin',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify()\n    }).then(res => res.json()).then(response => {\n      if (response.error || response === null || response === undefined) {\n        console.log(\"no\");\n      } else {\n        console.log(\"yes\");\n        console.log(response);\n        dispatch(setDepartments(response.data));\n        history.push(`/accounts/${accountId}/departments`);\n      }\n    }).catch(console.log);\n  };\n};\nexport const newDepartment = (department, accountId) => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(department)\n    }).then(response => response.json()).then(account => dispatch({\n      type: 'ADD_DEPARTMENT',\n      payload: account\n    }));\n  };\n};\nexport const deleteDepartment = (departmentId, accountId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`, {\n      method: 'DELETE'\n    }).then(response => response.json()).then(account => dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: account\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentDepartments.js"],"names":["setDepartments","departments","console","log","type","payload","getDepartments","accountId","history","dispatch","fetch","method","credentials","headers","body","JSON","stringify","then","res","json","response","error","undefined","data","push","catch","newDepartment","department","account","deleteDepartment","departmentId"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,WAAD,IAAiB;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACC,SAAO;AACLG,IAAAA,IAAI,EAAE,iBADD;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CANM;AAQP,OAAO,MAAMK,cAAc,GAAG,CAACC,SAAD,EAAYC,OAAZ,KAAwB;AACrD,SAAQC,QAAD,IAAc;AACpBP,IAAAA,OAAO,CAACC,GAAR,CAAYI,SAAZ;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYK,OAAZ;AACAE,IAAAA,KAAK,CAAE,yCAAwCH,SAAU,cAApD,EAAmE;AACvEI,MAAAA,MAAM,EAAE,KAD+D;AAEpEC,MAAAA,WAAW,EAAE,aAFuD;AAGvEC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAH8D;AAMvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AANiE,KAAnE,CAAL,CAQEC,IARF,CAQOC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARd,EASEF,IATF,CASOG,QAAQ,IAAI;AACjB,UAAIA,QAAQ,CAACC,KAAT,IAAkBD,QAAQ,KAAK,IAA/B,IAAuCA,QAAQ,KAAKE,SAAxD,EAAmE;AAClEpB,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAFD,MAEO;AACDD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACED,QAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACFX,QAAAA,QAAQ,CAACT,cAAc,CAACoB,QAAQ,CAACG,IAAV,CAAf,CAAR;AACAf,QAAAA,OAAO,CAACgB,IAAR,CAAc,aAAYjB,SAAU,cAApC;AACL;AACD,KAlBF,EAmBEkB,KAnBF,CAmBQvB,OAAO,CAACC,GAnBhB;AAoBA,GAvBD;AAwBA,CAzBM;AA2BP,OAAO,MAAMuB,aAAa,GAAG,CAACC,UAAD,EAAapB,SAAb,KAA2B;AACvD,SAAQE,QAAD,IAAc;AACpBC,IAAAA,KAAK,CAAE,yCAAwCH,SAAU,cAApD,EAAmE;AACvEI,MAAAA,MAAM,EAAE,MAD+D;AAEvEE,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAF8D;AAKvEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeW,UAAf;AALiE,KAAnE,CAAL,CAOCV,IAPD,CAOMG,QAAQ,IAAIA,QAAQ,CAACD,IAAT,EAPlB,EAQCF,IARD,CAQMW,OAAO,IAAInB,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAE,gBAAP;AAAyBC,MAAAA,OAAO,EAAEuB;AAAlC,KAAD,CARzB;AASA,GAVD;AAWA,CAZM;AAcP,OAAO,MAAMC,gBAAgB,GAAG,CAACC,YAAD,EAAevB,SAAf,KAA6B;AAC5D,SAAQE,QAAD,IAAc;AACpB,WAAOC,KAAK,CAAE,yCAAwCH,SAAU,gBAAeuB,YAAa,EAAhF,EAAmF;AAC9FnB,MAAAA,MAAM,EAAE;AADsF,KAAnF,CAAL,CAGNM,IAHM,CAGDG,QAAQ,IAAIA,QAAQ,CAACD,IAAT,EAHX,EAINF,IAJM,CAIDW,OAAO,IAAInB,QAAQ,CAAC;AAACL,MAAAA,IAAI,EAAE,oBAAP;AAA6BC,MAAAA,OAAO,EAAEuB;AAAtC,KAAD,CAJlB,CAAP;AAKA,GAND;AAOA,CARM","sourcesContent":["export const setDepartments = (departments) => {\n\tconsole.log(departments)\n  return {\n    type: \"GET_DEPARTMENTS\",\n    payload: departments\n  };\n};\n\nexport const getDepartments = (accountId, history) => {\n\treturn (dispatch) => {\n\t\tconsole.log(accountId)\n\t\tconsole.log(history)\n\t\tfetch(`http://localhost:3001/api/v1/accounts/${accountId}/departments`, {\n\t\t\tmethod: \"GET\",\n      credentials: 'same-origin',\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify()\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(response => {\n\t\t\t\tif (response.error || response === null || response === undefined) {\n\t\t\t\t\tconsole.log(\"no\")\n\t\t\t\t} else {\n          console.log(\"yes\")\n          \t\tconsole.log(response)\n          dispatch(setDepartments(response.data))\n          history.push(`/accounts/${accountId}/departments`)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t}\n}\n\nexport const newDepartment = (department, accountId) => {\n\treturn (dispatch) => {\n\t\tfetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t},\n\t\t\tbody: JSON.stringify(department)\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(account => dispatch({type: 'ADD_DEPARTMENT', payload: account}))\n\t}\n}\n\nexport const deleteDepartment = (departmentId, accountId) => {\n\treturn (dispatch) => {\n\t\treturn fetch(`http://localhost:3000/api/v1/accounts/${accountId}/departments/${departmentId}`, {\n\t\t\tmethod: 'DELETE'\n\t\t})\n\t\t.then(response => response.json())\n\t\t.then(account => dispatch({type: 'DELETE_TRANSACTION', payload: account}))\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}