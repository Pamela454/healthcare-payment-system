{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js\";\n//import {Link} from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport React from \"react\"; //import { useHistory } from \"react-router-dom\";\n//import {Redirect} from \"react-router-dom\"\n\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { getDepartments } from \".././actions/currentDepartments.js\"; //import DepartmentsContainer from '../containers/DepartmentsContainer'\n//does not go through lifecycle checks, functional component\n//takes props as an argument and returns a react element\n//returns JSX instead of using render method\n//updates based on prop changes or if parent component rerenders\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Account = props => {\n  //let account = props.accounts[props.match.params.id - 1]\n  //do you need a key?, only if iterating\n  //do I need a default balance of 0 when creating a new account?\n  console.log(props);\n\n  const handleClick = e => {\n    //const { accountId } = e.target;\n    //const accountId = props.account.id\n    e.persist();\n    e.preventDefault();\n    props.getDepartments(props.account.account.id, props.history);\n  }; //add value to button?\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row align-items-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Account Name \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), props.account ? ` - ` + props.account.account.attributes.name : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \" Account Balance \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), props.account ? `  $` + props.account.account.attributes.balance : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClick,\n          children: \"View Charges\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}; //withRouter gives access to this.props.history, match, and location\n//second connect argument is matchdispatch to props. changes the state. receives props.dispatch through connect if no param.\n//can specify an action to dispatch.\n\n\n_c = Account;\nexport default withRouter(connect(null, {\n  getDepartments\n})(Account));\n\nvar _c;\n\n$RefreshReg$(_c, \"Account\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js"],"names":["connect","React","withRouter","Button","getDepartments","Account","props","console","log","handleClick","e","persist","preventDefault","account","id","history","attributes","name","balance"],"mappings":";AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,cAAT,QAA+B,oCAA/B,C,CACA;AAEA;AACA;AACA;AACA;;;;AACA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAMG,WAAW,GAAIC,CAAD,IAAO;AACvB;AACA;AACAA,IAAAA,CAAC,CAACC,OAAF;AACAD,IAAAA,CAAC,CAACE,cAAF;AACAN,IAAAA,KAAK,CAACF,cAAN,CAAqBE,KAAK,CAACO,OAAN,CAAcA,OAAd,CAAsBC,EAA3C,EAA+CR,KAAK,CAACS,OAArD;AACH,GAND,CALuB,CAYvB;;;AACA,sBACI;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,wBAAX;AAAA,6BACI;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA,gCACI;AAAA,qBACK,GADL,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,EAIKT,KAAK,CAACO,OAAN,GACM,KAAD,GAAQP,KAAK,CAACO,OAAN,CAAcA,OAAd,CAAsBG,UAAtB,CAAiCC,IAD9C,GAEK,IANV,eAOI;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,EASKX,KAAK,CAACO,OAAN,GACM,KAAD,GAAQP,KAAK,CAACO,OAAN,CAAcA,OAAd,CAAsBG,UAAtB,CAAiCE,OAD9C,GAEK,IAXV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAnCD,C,CAoCA;AACA;AACA;;;KAtCMJ,O;AAuCN,eAAeH,UAAU,CAACF,OAAO,CAAC,IAAD,EAAO;AAAEI,EAAAA;AAAF,CAAP,CAAP,CAAkCC,OAAlC,CAAD,CAAzB","sourcesContent":["//import {Link} from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport React from \"react\";\n//import { useHistory } from \"react-router-dom\";\n//import {Redirect} from \"react-router-dom\"\nimport { withRouter } from \"react-router-dom\";\nimport { Button } from \"react-bootstrap\";\nimport { getDepartments } from \".././actions/currentDepartments.js\";\n//import DepartmentsContainer from '../containers/DepartmentsContainer'\n\n//does not go through lifecycle checks, functional component\n//takes props as an argument and returns a react element\n//returns JSX instead of using render method\n//updates based on prop changes or if parent component rerenders\nconst Account = (props) => {\n    //let account = props.accounts[props.match.params.id - 1]\n    //do you need a key?, only if iterating\n    //do I need a default balance of 0 when creating a new account?\n    console.log(props)\n    const handleClick = (e) => {\n        //const { accountId } = e.target;\n        //const accountId = props.account.id\n        e.persist();\n        e.preventDefault();\n        props.getDepartments(props.account.account.id, props.history);\n    };\n    //add value to button?\n    return (\n        <div class=\"container\">\n            <div class=\"row align-items-center\">\n                <div class=\"col\">\n                    <h2>\n                        {\" \"}\n                        {/* can assign a key by converting to an integer? item index? */}\n                        <label> Account Name </label>\n                        {props.account\n                            ? ` - ` + props.account.account.attributes.name\n                            : null}\n                        <br></br>\n                        <label> Account Balance </label>\n                        {props.account\n                            ? `  $` + props.account.account.attributes.balance\n                            : null}\n                    </h2>\n                    <Button onClick={handleClick}>View Charges</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n//withRouter gives access to this.props.history, match, and location\n//second connect argument is matchdispatch to props. changes the state. receives props.dispatch through connect if no param.\n//can specify an action to dispatch.\nexport default withRouter(connect(null, { getDepartments })(Account));\n"]},"metadata":{},"sourceType":"module"}