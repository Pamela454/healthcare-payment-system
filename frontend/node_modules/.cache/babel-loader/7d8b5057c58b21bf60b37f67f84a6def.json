{"ast":null,"code":"export const setCurrentAccount = account => {\n  console.log(account);\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account: account\n  };\n}; //type and payload property \n//action creator, function that returns an action \n//thunk allows return of function instead of object. Function receives dispatch function and can dispatch multiple actions. \n//needs to be revised \n\nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json()).then(user => {\n      if (user.error) {\n        // alert(user.error);\n        toast.notify(user.error, {\n          position: \"bottom-right\"\n        });\n      } else {\n        dispatch(setCurrentUser(user));\n        dispatch(getAllPets()); // dispatch(getAllUsers());\n\n        dispatch(getAllDonations());\n      }\n    }).catch(console.log);\n  };\n};\nexport const login = credentials => {\n  //console.log(credentials)\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    }).then(res => res.json()).then(account => {\n      if (account.error) {\n        console.log(\"no\");\n      } else {\n        dispatch(setCurrentAccount(account));\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/setCurrentAccount.js"],"names":["setCurrentAccount","account","console","log","type","getCurrentUser","dispatch","fetch","method","credentials","headers","then","res","json","user","error","toast","notify","position","setCurrentUser","getAllPets","getAllDonations","catch","login","body","JSON","stringify"],"mappings":"AAAA,OAAO,MAAMA,iBAAiB,GAAIC,OAAD,IAAa;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACC,SAAO;AACLG,IAAAA,IAAI,EAAE,qBADD;AAELH,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CANM,C,CAQP;AACA;AACA;AAEA;;AACA,OAAO,MAAMI,cAAc,GAAG,MAAM;AAClC,SAAOC,QAAQ,IAAI;AACjB,WAAOC,KAAK,CAAC,+CAAD,EAAkD;AAC5DC,MAAAA,MAAM,EAAE,KADoD;AAE5DC,MAAAA,WAAW,EAAE,SAF+C;AAG5DC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHmD,KAAlD,CAAL,CAOJC,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAQJF,IARI,CAQCG,IAAI,IAAI;AACZ,UAAIA,IAAI,CAACC,KAAT,EAAgB;AACd;AACAC,QAAAA,KAAK,CAACC,MAAN,CAAaH,IAAI,CAACC,KAAlB,EAAyB;AACvBG,UAAAA,QAAQ,EAAE;AADa,SAAzB;AAGD,OALD,MAKO;AACLZ,QAAAA,QAAQ,CAACa,cAAc,CAACL,IAAD,CAAf,CAAR;AACAR,QAAAA,QAAQ,CAACc,UAAU,EAAX,CAAR,CAFK,CAGL;;AACAd,QAAAA,QAAQ,CAACe,eAAe,EAAhB,CAAR;AACD;AACF,KApBI,EAqBJC,KArBI,CAqBEpB,OAAO,CAACC,GArBV,CAAP;AAsBD,GAvBD;AAwBD,CAzBM;AA2BP,OAAO,MAAMoB,KAAK,GAAGd,WAAW,IAAI;AACnC;AACA,SAAOH,QAAQ,IAAI;AAClB,WAAOC,KAAK,CAAC,oCAAD,EAAuC;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDC,MAAAA,WAAW,EAAE,SAFqC;AAGlDC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR,OAHyC;AAMlDc,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAejB,WAAf;AAN4C,KAAvC,CAAL,CAQLE,IARK,CAQAC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARP,EASLF,IATK,CASAV,OAAO,IAAI;AAChB,UAAIA,OAAO,CAACc,KAAZ,EAAmB;AAClBb,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,OAFD,MAEO;AACNG,QAAAA,QAAQ,CAACN,iBAAiB,CAACC,OAAD,CAAlB,CAAR;AACA;AACD,KAfK,EAgBLqB,KAhBK,CAgBCpB,OAAO,CAACC,GAhBT,CAAP;AAiBA,GAlBD;AAmBA,CArBM","sourcesContent":["export const setCurrentAccount = (account) => {\n\tconsole.log(account)\n  return {\n    type: \"SET_CURRENT_ACCOUNT\",\n    account: account \n  };\n};\n\n//type and payload property \n//action creator, function that returns an action \n//thunk allows return of function instead of object. Function receives dispatch function and can dispatch multiple actions. \n\n//needs to be revised \nexport const getCurrentUser = () => {\n  return dispatch => {\n    return fetch(\"http://localhost:3001/api/v1/get_current_user\", {\n      method: \"GET\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    })\n      .then(res => res.json())\n      .then(user => {\n        if (user.error) {\n          // alert(user.error);\n          toast.notify(user.error, {\n            position: \"bottom-right\"\n          });\n        } else {\n          dispatch(setCurrentUser(user));\n          dispatch(getAllPets());\n          // dispatch(getAllUsers());\n          dispatch(getAllDonations());\n        }\n      })\n      .catch(console.log);\n  };\n};\n\nexport const login = credentials => {\n\t//console.log(credentials)\n\treturn dispatch => {\n\t\treturn fetch(\"http://localhost:3001/api/v1/login\", {\n\t\t\tmethod: \"POST\",\n\t\t\tcredentials: \"include\",\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\"\n\t\t\t},\n\t\t\tbody: JSON.stringify(credentials)\n\t\t})\n\t\t\t.then(res => res.json())\n\t\t\t.then(account => {\n\t\t\t\tif (account.error) {\n\t\t\t\t\tconsole.log(\"no\")\n\t\t\t\t} else {\n\t\t\t\t\tdispatch(setCurrentAccount(account))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(console.log);\n\t}\n}"]},"metadata":{},"sourceType":"module"}