{"ast":null,"code":"export const addPayment = payment => {\n  return {\n    type: \"ADD_PAYMENT\",\n    payload: payment\n  };\n};\nexport const newPayment = (paymentData, history) => {\n  console.log(\"newPayment.paymentData is: \");\n  console.log(paymentData);\n  console.log(\"newPayment.history is: \");\n  console.log(history);\n  return dispatch => {\n    console.log(\"about to fetch!\");\n    console.log(paymentData);\n    return fetch(`http://localhost:3001/api/v1/accounts/${paymentData.account_id}/payments/new`, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(paymentData)\n    }).then(res => res.json()).then(payment => {\n      console.log(payment);\n\n      if (payment.error) {\n        alert(\"error\");\n      } else {\n        console.log(\"payment.data: \");\n        console.log(payment.data);\n        dispatch(addPayment(payment.data));\n        history.push(`/accounts/${paymentData.account_id}`);\n      }\n    }).catch(console.log);\n  };\n};\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js"],"names":["addPayment","payment","type","payload","newPayment","paymentData","history","console","log","dispatch","fetch","account_id","method","credentials","headers","body","JSON","stringify","then","res","json","error","alert","data","push","catch"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,OAAD,IAAa;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,aADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,UAAU,GAAG,CAACC,WAAD,EAAcC,OAAd,KAA0B;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,SAAQG,QAAD,IAAc;AACnBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ;AACA,WAAOK,KAAK,CACT,yCAAwCL,WAAW,CAACM,UAAW,eADtD,EAEV;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,WAAW,EAAE,aAFf;AAGEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeZ,WAAf;AANR,KAFU,CAAL,CAWJa,IAXI,CAWEC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAXV,EAYJF,IAZI,CAYEjB,OAAD,IAAa;AACjBM,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;;AACA,UAAIA,OAAO,CAACoB,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAFD,MAEO;AACLf,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYP,OAAO,CAACsB,IAApB;AACAd,QAAAA,QAAQ,CAACT,UAAU,CAACC,OAAO,CAACsB,IAAT,CAAX,CAAR;AACAjB,QAAAA,OAAO,CAACkB,IAAR,CAAc,aAAYnB,WAAW,CAACM,UAAW,EAAjD;AACD;AACF,KAtBI,EAuBJc,KAvBI,CAuBElB,OAAO,CAACC,GAvBV,CAAP;AAwBD,GA3BD;AA4BD,CAlCM;AAoCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const addPayment = (payment) => {\n  return {\n    type: \"ADD_PAYMENT\",\n    payload: payment,\n  };\n};\n\nexport const newPayment = (paymentData, history) => {\n  console.log(\"newPayment.paymentData is: \");\n  console.log(paymentData);\n  console.log(\"newPayment.history is: \");\n  console.log(history);\n\n  return (dispatch) => {\n    console.log(\"about to fetch!\");\n    console.log(paymentData);\n    return fetch(\n      `http://localhost:3001/api/v1/accounts/${paymentData.account_id}/payments/new`,\n      {\n        method: \"POST\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(paymentData),\n      }\n    )\n      .then((res) => res.json())\n      .then((payment) => {\n        console.log(payment);\n        if (payment.error) {\n          alert(\"error\");\n        } else {\n          console.log(\"payment.data: \");\n          console.log(payment.data);\n          dispatch(addPayment(payment.data));\n          history.push(`/accounts/${paymentData.account_id}`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */\n"]},"metadata":{},"sourceType":"module"}