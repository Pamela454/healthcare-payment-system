{"ast":null,"code":"var _jsxFileName = \"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../../actions/currentAccount\";\n\nconst Signup = ({\n  name,\n  password,\n  status,\n  signup,\n  history\n}) => {\n  _s();\n\n  const [signupFormData, setForm] = useState({\n    name: \"\",\n    password: \"\",\n    status: \"\"\n  });\n\n  const handleSignupFormChange = (event, target) => {\n    setForm({ ...signupFormData,\n      [target]: event.target.value\n    });\n  };\n\n  const handleSignupFormSubmit = event => {\n    event.preventDefault();\n    signup(signupFormData, history);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Signup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSignupFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"name\",\n    type: \"text\",\n    name: \"name\",\n    value: signupFormData.name,\n    onChange: event => handleSignupFormChange(event, \"name\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: signupFormData.password,\n    onChange: event => handleSignupFormChange(event, \"password\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: signupFormData.status,\n    onChange: event => handleSignupFormChange(event, \"status\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"patient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Patient\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"admin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, \"Administrator\"))), /*#__PURE__*/React.createElement(\"button\", {\n    placeholder: \"submit\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Sign Up\")));\n};\n\n_s(Signup, \"KFfQKzscdCYqpnXi2SjU8SL06cU=\");\n\n_c = Signup;\n\nconst mapStateToProps = state => {\n  //what portion of state to provide to props\n  return {\n    signupFormData: state.signupForm\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signup\n})(Signup);\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Signup.js"],"names":["React","useState","Button","Form","connect","signup","Signup","name","password","status","history","signupFormData","setForm","handleSignupFormChange","event","target","value","handleSignupFormSubmit","preventDefault","mapStateToProps","state","signupForm"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { signup } from \"../../actions/currentAccount\";\n\nconst Signup = ({ name, password, status, signup, history }) => {\n  const [signupFormData, setForm] = useState({\n    name: \"\",\n    password: \"\",\n    status: \"\",\n  });\n\n  const handleSignupFormChange = (event, target) => {\n    setForm({\n      ...signupFormData,\n      [target]: event.target.value,\n    });\n  };\n\n  const handleSignupFormSubmit = (event) => {\n    event.preventDefault();\n    signup(signupFormData, history);\n  };\n\n  return (\n    <div className=\"Signup\">\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSignupFormSubmit}>\n        <input\n          placeholder=\"name\"\n          type=\"text\"\n          name=\"name\"\n          value={signupFormData.name}\n          onChange={(event) => handleSignupFormChange(event, \"name\")}\n        />\n        <br />\n        <input\n          placeholder=\"password\"\n          type=\"password\"\n          name=\"password\"\n          value={signupFormData.password}\n          onChange={(event) => handleSignupFormChange(event, \"password\")}\n        />\n        <br />\n        <label>\n          <select\n            value={signupFormData.status}\n            onChange={(event) => handleSignupFormChange(event, \"status\")}\n          >\n            <option value=\"patient\">Patient</option>\n            <option value=\"admin\">Administrator</option>\n          </select>\n        </label>\n        <button placeholder=\"submit\" type=\"submit\">\n          Sign Up\n        </button>\n      </form>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  //what portion of state to provide to props\n  return {\n    signupFormData: state.signupForm,\n  };\n};\n\nexport default connect(mapStateToProps, { signup })(Signup);\n"]},"metadata":{},"sourceType":"module"}