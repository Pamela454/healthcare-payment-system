{"ast":null,"code":"//accepts action object\nexport default function accountReducer(state = null, action) {\n  //combines current state and action \n  switch (action.type) {\n    case 'ADD_ACCOUNT':\n      //creates a new object \n      console.log(action.payload);\n      return action.payload;\n    //return {...state, account: [...state.account, action.payload]} //only override specific property \n\n    case 'ADD_DEPARTMENT':\n      //at least returns some version of state\n      let account = state.account;\n\n      if (account.id === action.payload.id) {\n        return action.payload;\n      } else {\n        return account;\n      }\n\n    //return {...state, account: account}\n\n    case 'DELETE_TRANSACTION':\n      //at least returns some version of state\n      //let accountsNext = state.accounts.map(account => {\n      if (account.id === action.payload.id) {\n        return action.payload;\n      } else {\n        return account;\n      }\n\n    //})\n    //return {...state, accounts: accountsNext}\n\n    default:\n      return state;\n    //never return null \n  }\n} //reducer is a function \n//state as object vs array\n//updates the state based on the action \n//switch case statement so as not to clutter code with many if else statements","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/reducers/accountReducer.js"],"names":["accountReducer","state","action","type","console","log","payload","account","id"],"mappings":"AAAA;AACA,eAAe,SAASA,cAAT,CAAwBC,KAAK,GAAG,IAAhC,EAAsCC,MAAtC,EAA8C;AAAG;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,aAAL;AAAoB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AAEE,aAAOJ,MAAM,CAACI,OAAd;AACA;;AACN,SAAK,gBAAL;AAAuB;AACjB,UAAIC,OAAO,GAAGN,KAAK,CAACM,OAApB;;AACC,UAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACI,OAAP,CAAeE,EAAlC,EAAsC;AACpC,eAAON,MAAM,CAACI,OAAd;AACD,OAFD,MAEO;AACL,eAAOC,OAAP;AACD;;AACF;;AACN,SAAK,oBAAL;AAA2B;AACrB;AACE,UAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACI,OAAP,CAAeE,EAAlC,EAAsC;AACpC,eAAON,MAAM,CAACI,OAAd;AACD,OAFD,MAEO;AACL,eAAOC,OAAP;AACD;;AACH;AACA;;AACN;AACM,aAAON,KAAP;AAAa;AAxBtB;AA0BA,C,CAED;AACA;AACA;AACA","sourcesContent":["//accepts action object\nexport default function accountReducer(state = null, action) {  //combines current state and action \n\tswitch (action.type) {\n    case 'ADD_ACCOUNT': //creates a new object \n        console.log(action.payload)\n\n          return action.payload\n          //return {...state, account: [...state.account, action.payload]} //only override specific property \n    case 'ADD_DEPARTMENT': //at least returns some version of state\n          let account = state.account\n          \tif (account.id === action.payload.id) {\n          \t  return action.payload \n          \t} else {\n          \t  return account \n          \t}\n          //return {...state, account: account}\n    case 'DELETE_TRANSACTION': //at least returns some version of state\n          //let accountsNext = state.accounts.map(account => {\n            if (account.id === action.payload.id) {\n              return action.payload \n            } else {\n              return account \n            }\n          //})\n          //return {...state, accounts: accountsNext}\n    default:\n          return state //never return null \n    }       \n}\n\n//reducer is a function \n//state as object vs array\n//updates the state based on the action \n//switch case statement so as not to clutter code with many if else statements \n"]},"metadata":{},"sourceType":"module"}