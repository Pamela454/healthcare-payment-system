{"ast":null,"code":"export const newPayment = (form, history) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${history}/payments/new`, {\n      method: \"POST\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    }).then(response => response.json()).then(payment => {\n      if (payment.error) {\n        alert(\"error\");\n      } else {\n        console.log(\"payment.data is: \" + JSON.stringify(payment.data));\n        dispatch({\n          type: \"ADD_PAYMENT\",\n          payload: payment\n        });\n        history.push(`/accounts/${history}`);\n      }\n    });\n  };\n};\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */\n\nexport const getDepartments = (accountId, history) => {\n  return dispatch => {\n    console.log(accountId);\n    console.log(history);\n    fetch(`http://localhost:3001/api/v1/accounts/${accountId}/departments`, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify()\n    }).then(res => res.json()).then(response => {\n      if (response.error || response === null || response === undefined) {\n        console.log(\"no\");\n      } else {\n        console.log(\"yes\");\n        console.log(response);\n        dispatch(setDepartments(response.data));\n        history.push(`/accounts/${accountId}/departments`);\n      }\n    }).catch(console.log);\n  };\n};","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js"],"names":["newPayment","form","history","dispatch","fetch","method","credentials","headers","body","JSON","stringify","then","response","json","payment","error","alert","console","log","data","type","payload","push","getDepartments","accountId","res","undefined","setDepartments","catch"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AAC3C,SAAQC,QAAD,IAAc;AACnB,WAAOC,KAAK,CACT,yCAAwCF,OAAQ,eADvC,EAEV;AACEG,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,WAAW,EAAE,aAFf;AAGEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf;AANR,KAFU,CAAL,CAWJU,IAXI,CAWEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAXf,EAYJF,IAZI,CAYEG,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAFD,MAEO;AACLC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBT,IAAI,CAACC,SAAL,CAAeI,OAAO,CAACK,IAAvB,CAAlC;AACAhB,QAAAA,QAAQ,CAAC;AAAEiB,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,OAAO,EAAEP;AAAhC,SAAD,CAAR;AACAZ,QAAAA,OAAO,CAACoB,IAAR,CAAc,aAAYpB,OAAQ,EAAlC;AACD;AACF,KApBI,CAAP;AAqBD,GAtBD;AAuBD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMqB,cAAc,GAAG,CAACC,SAAD,EAAYtB,OAAZ,KAAwB;AACpD,SAAQC,QAAD,IAAc;AACnBc,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYhB,OAAZ;AACAE,IAAAA,KAAK,CAAE,yCAAwCoB,SAAU,cAApD,EAAmE;AACtEnB,MAAAA,MAAM,EAAE,KAD8D;AAEtEC,MAAAA,WAAW,EAAE,aAFyD;AAGtEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAH6D;AAMtEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL;AANgE,KAAnE,CAAL,CAQGC,IARH,CAQSc,GAAD,IAASA,GAAG,CAACZ,IAAJ,EARjB,EASGF,IATH,CASSC,QAAD,IAAc;AAClB,UAAIA,QAAQ,CAACG,KAAT,IAAkBH,QAAQ,KAAK,IAA/B,IAAuCA,QAAQ,KAAKc,SAAxD,EAAmE;AACjET,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,OAFD,MAEO;AACLD,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAT,QAAAA,QAAQ,CAACwB,cAAc,CAACf,QAAQ,CAACO,IAAV,CAAf,CAAR;AACAjB,QAAAA,OAAO,CAACoB,IAAR,CAAc,aAAYE,SAAU,cAApC;AACD;AACF,KAlBH,EAmBGI,KAnBH,CAmBSX,OAAO,CAACC,GAnBjB;AAoBD,GAvBD;AAwBD,CAzBM","sourcesContent":["export const newPayment = (form, history) => {\n  return (dispatch) => {\n    return fetch(\n      `http://localhost:3000/api/v1/accounts/${history}/payments/new`,\n      {\n        method: \"POST\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(form),\n      }\n    )\n      .then((response) => response.json())\n      .then((payment) => {\n        if (payment.error) {\n          alert(\"error\");\n        } else {\n          console.log(\"payment.data is: \" + JSON.stringify(payment.data));\n          dispatch({ type: \"ADD_PAYMENT\", payload: payment });\n          history.push(`/accounts/${history}`);\n        }\n      });\n  };\n};\n\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */\n\nexport const getDepartments = (accountId, history) => {\n  return (dispatch) => {\n    console.log(accountId);\n    console.log(history);\n    fetch(`http://localhost:3001/api/v1/accounts/${accountId}/departments`, {\n      method: \"GET\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(),\n    })\n      .then((res) => res.json())\n      .then((response) => {\n        if (response.error || response === null || response === undefined) {\n          console.log(\"no\");\n        } else {\n          console.log(\"yes\");\n          console.log(response);\n          dispatch(setDepartments(response.data));\n          history.push(`/accounts/${accountId}/departments`);\n        }\n      })\n      .catch(console.log);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}