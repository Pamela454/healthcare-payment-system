{"ast":null,"code":"export const newPayment = (form, accountId, history) => {\n  console.log(\"account id is: \" + JSON.stringify(accountId));\n  return dispatch => {\n    return fetch(`http://localhost:3000/api/v1/accounts/${accountId}/payments/new`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(form)\n    }).then(response => response.json()).then(payment => {\n      if (payment.error) {\n        alert(\"error\");\n      } else {\n        console.log(\"payment.data is: \" + JSON.stringify(payment.data));\n        dispatch({\n          type: \"ADD_PAYMENT\",\n          payload: payment\n        });\n        history.push(`/accounts/${accountId}`);\n      }\n    });\n  };\n};\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */","map":{"version":3,"sources":["/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js"],"names":["newPayment","form","accountId","history","console","log","JSON","stringify","dispatch","fetch","method","headers","body","then","response","json","payment","error","alert","data","type","payload","push"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,CAACC,IAAD,EAAOC,SAAP,EAAkBC,OAAlB,KAA8B;AACtDC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBC,IAAI,CAACC,SAAL,CAAeL,SAAf,CAAhC;AACA,SAAQM,QAAD,IAAc;AACnB,WAAOC,KAAK,CACT,yCAAwCP,SAAU,eADzC,EAEV;AACEQ,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEC,MAAAA,IAAI,EAAEN,IAAI,CAACC,SAAL,CAAeN,IAAf;AALR,KAFU,CAAL,CAUJY,IAVI,CAUEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAVf,EAWJF,IAXI,CAWEG,OAAD,IAAa;AACjB,UAAIA,OAAO,CAACC,KAAZ,EAAmB;AACjBC,QAAAA,KAAK,CAAC,OAAD,CAAL;AACD,OAFD,MAEO;AACLd,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,IAAI,CAACC,SAAL,CAAeS,OAAO,CAACG,IAAvB,CAAlC;AACAX,QAAAA,QAAQ,CAAC;AAAEY,UAAAA,IAAI,EAAE,aAAR;AAAuBC,UAAAA,OAAO,EAAEL;AAAhC,SAAD,CAAR;AACAb,QAAAA,OAAO,CAACmB,IAAR,CAAc,aAAYpB,SAAU,EAApC;AACD;AACF,KAnBI,CAAP;AAoBD,GArBD;AAsBD,CAxBM;AA0BP;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const newPayment = (form, accountId, history) => {\n  console.log(\"account id is: \" + JSON.stringify(accountId));\n  return (dispatch) => {\n    return fetch(\n      `http://localhost:3000/api/v1/accounts/${accountId}/payments/new`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(form),\n      }\n    )\n      .then((response) => response.json())\n      .then((payment) => {\n        if (payment.error) {\n          alert(\"error\");\n        } else {\n          console.log(\"payment.data is: \" + JSON.stringify(payment.data));\n          dispatch({ type: \"ADD_PAYMENT\", payload: payment });\n          history.push(`/accounts/${accountId}`);\n        }\n      });\n  };\n};\n\n/*let chargeToken = this.props.stripe.createToken({name: \"Name\"})\n  let charge = {\n     amount: form.amount,\n     cardnumber: form.cardnumber,\n     expiration: form.expiration,\n     cvc: form.cvc,\n     token: chargeToken.token.id \n  } */\n"]},"metadata":{},"sourceType":"module"}