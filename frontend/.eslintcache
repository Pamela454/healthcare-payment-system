[{"/Users/pamela/healthcare-payment-system/frontend/src/index.js":"1","/Users/pamela/healthcare-payment-system/frontend/src/serviceWorker.js":"2","/Users/pamela/healthcare-payment-system/frontend/src/App.js":"3","/Users/pamela/healthcare-payment-system/frontend/src/reducers/accountReducer.js":"4","/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js":"5","/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Signup.js":"6","/Users/pamela/healthcare-payment-system/frontend/src/components/Navbar.js":"7","/Users/pamela/healthcare-payment-system/frontend/src/components/Departments.js":"8","/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Logout.js":"9","/Users/pamela/healthcare-payment-system/frontend/src/components/Payments.js":"10","/Users/pamela/healthcare-payment-system/frontend/src/components/Accounts.js":"11","/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js":"12","/Users/pamela/healthcare-payment-system/frontend/src/containers/DepartmentsContainer.js":"13","/Users/pamela/healthcare-payment-system/frontend/src/components/DepartmentNew.js":"14","/Users/pamela/healthcare-payment-system/frontend/src/containers/AccountContainer.js":"15","/Users/pamela/healthcare-payment-system/frontend/src/components/AccountNew.js":"16","/Users/pamela/healthcare-payment-system/frontend/src/actions/currentAccount.js":"17","/Users/pamela/healthcare-payment-system/frontend/src/reducers/loginFormReducer.js":"18","/Users/pamela/healthcare-payment-system/frontend/src/reducers/signupFormReducer.js":"19","/Users/pamela/healthcare-payment-system/frontend/src/actions/currentDepartments.js":"20","/Users/pamela/healthcare-payment-system/frontend/src/reducers/departmentsReducer.js":"21","/Users/pamela/healthcare-payment-system/frontend/src/components/PaymentNew.js":"22","/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js":"23"},{"size":2113,"mtime":1617739868000,"results":"24","hashOfConfig":"25"},{"size":5086,"mtime":1588038356000,"results":"26","hashOfConfig":"25"},{"size":2467,"mtime":1617895512000,"results":"27","hashOfConfig":"25"},{"size":475,"mtime":1617898185000,"results":"28","hashOfConfig":"25"},{"size":1898,"mtime":1617726011000,"results":"29","hashOfConfig":"25"},{"size":1759,"mtime":1617148989000,"results":"30","hashOfConfig":"25"},{"size":546,"mtime":1617206890000,"results":"31","hashOfConfig":"25"},{"size":1463,"mtime":1617811884000,"results":"32","hashOfConfig":"25"},{"size":417,"mtime":1617809803000,"results":"33","hashOfConfig":"25"},{"size":0,"mtime":1598296046000,"results":"34","hashOfConfig":"25"},{"size":366,"mtime":1609266297000,"results":"35","hashOfConfig":"25"},{"size":1659,"mtime":1617807317000,"results":"36","hashOfConfig":"25"},{"size":721,"mtime":1617752549000,"results":"37","hashOfConfig":"25"},{"size":1695,"mtime":1617295164000,"results":"38","hashOfConfig":"25"},{"size":1582,"mtime":1617731232000,"results":"39","hashOfConfig":"25"},{"size":940,"mtime":1614889081000,"results":"40","hashOfConfig":"25"},{"size":2766,"mtime":1617809864000,"results":"41","hashOfConfig":"25"},{"size":399,"mtime":1617073293000,"results":"42","hashOfConfig":"25"},{"size":315,"mtime":1616694468000,"results":"43","hashOfConfig":"25"},{"size":1590,"mtime":1617898138000,"results":"44","hashOfConfig":"25"},{"size":776,"mtime":1617897334000,"results":"45","hashOfConfig":"25"},{"size":2194,"mtime":1617897819000,"results":"46","hashOfConfig":"25"},{"size":389,"mtime":1617897928000,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"bx1qn5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/pamela/healthcare-payment-system/frontend/src/index.js",[],["100","101"],"/Users/pamela/healthcare-payment-system/frontend/src/serviceWorker.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/App.js",["102"],"import React, { Component, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { connect } from 'react-redux'\nimport { loggedIn } from \"./actions/currentAccount.js\"\nimport \"./App.css\";\nimport { Elements, CardElement } from \"@stripe/react-stripe-js\";\nimport PaymentNew from './components/PaymentNew'\nimport AccountContainer from './containers/AccountContainer'\nimport Navbar from './components/Navbar'\nimport DepartmentsContainer from './containers/DepartmentsContainer'\nimport Login from './components/registrations/Login'\nimport Signup from './components/registrations/Signup'\n\n\nconst App extends Component {\n\n  componentDidMount() {\n    if (localStorage.getItem(\"loggedIn\")) {\n      loggedIn(this.props.history);\n    }\n  }\n\n    const currentAccount = localStorage.getItem(\"loggedIn\");\n    const stripe = loadStripe(\"{PUBLIC-KEY}\");\n\n    return (\n      <div className=\"App\">\n            <h2>{ currentAccount ? \n        `Logged in as ${this.props.loginFormReducer.attributes.name}` :\n        \"Not logged in\" }</h2> \n        <div className=\"App\">\n    </div>\n        <Switch>   \n          <Route exact path='/api/v1/login' render={props => ( <Login {...props}/>)}/>\n          <Route exact path='/api/v1/signup' render={props => ( <Signup {...props}/>)}/>\n          <Redirect from=\"/logout\" to=\"api/v1/login\" />\n          <Route exact path='/accounts/:id' render={props => {\n            return <AccountContainer {...props} account={currentAccount}/>\n          } }/>\n          <Route exact path='/accounts/:id/departments' render={props => {\n            return <DepartmentsContainer/>\n          } }/>\n          <Route exact path='/accounts/:id/payments/new' render={props => ( \n          <React.Fragment>\n           <Elements stripe={stripe}>\n            <PaymentNew {...props}/>\n          </Elements>\n          </React.Fragment> )}/>\n        </Switch>\n         { currentAccount ? <Navbar account={currentAccount}/> : null } \n    </div>\n    );\n}\n//gives access to part of store \n//receives entire state as it's argument \nconst mapStateToProps = state => { //what portion of state to provide to props \n  return { //executed with each change to the store. \n    ...state\n  };\n}\n//could be changed to anonymous arrow function \n//dispatch is injected as a prop\nexport default withRouter(connect(mapStateToProps, { loggedIn })(App)); // specifies component to provide data to. ","/Users/pamela/healthcare-payment-system/frontend/src/reducers/accountReducer.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Login.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Signup.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/Navbar.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/Departments.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/registrations/Logout.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/Payments.js",[],["103","104"],"/Users/pamela/healthcare-payment-system/frontend/src/components/Accounts.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/Account.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/containers/DepartmentsContainer.js",["105"],"import React from 'react'\nimport { Route, Switch, withRouter } from 'react-router-dom'\nimport {connect} from 'react-redux'\n//import {fetchDepartments} from '../actions/fetchDepartments'\nimport DepartmentNew from '../components/DepartmentNew'\nimport Departments from '../components/Departments'\n\n\nclass DepartmentsContainer extends React.Component {\n    \n   \n\trender () {\n\t\tconsole.log(this.props)\n\t\treturn (\n\t\t\t<div>\n\t\t\t <Switch>\n\t\t\t\t<Route exact path='/departments/new' render={props => {\n\t\t\t\t\treturn <DepartmentNew {...props} account={this.props}/> }\n\t\t\t\t }/>\n\t\t\t\t<Route path='/accounts/:id/departments' render={props => {\n\t\t\t\t\treturn <Departments/> }\n\t\t\t\t}/>\n\t\t\t </Switch>\n\t\t\t</div>\n\n\t\t)\n\t}\n}\n\n\nexport default withRouter((DepartmentsContainer))","/Users/pamela/healthcare-payment-system/frontend/src/components/DepartmentNew.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/containers/AccountContainer.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/components/AccountNew.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/actions/currentAccount.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/reducers/loginFormReducer.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/reducers/signupFormReducer.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/actions/currentDepartments.js",[],"/Users/pamela/healthcare-payment-system/frontend/src/reducers/departmentsReducer.js",["106","107"],"const initialState = {\n\tdepartments: []\n}\n\n\nexport default function departmentsReducer(state = initialState, action) {  //combines current state and action \n\tswitch (action.type) {\n    case 'GET_DEPARTMENTS': \n    \tconsole.log(action)\n    \treturn action.departments\n    case 'ADD_DEPARTMENT': \n          \n          \n    case 'DELETE_DEPARTMENT': //at least returns some version of state\n          \n    default:\n          return state //never return null \n    }       \n}\n\n/*\n\nstate = { departments: [] }\n\nstate = { departments: [] } // new object wrapper\n\nstate = { departments: [] }  // new array in the departments variable\n\nstate = { departments: [] } // spreading the initialState's array\n\nstate = { departments: [action.payload] } // adding action.payoad to the array\n\nstate = { departments: [ [{id:1, attributes: {charge:20, name:\"\", service:\"\"} }] ] } // adding action.payoad to the array\n\n\n*/","/Users/pamela/healthcare-payment-system/frontend/src/components/PaymentNew.js",["108","109"],"import React from 'react'\nimport { useState } from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { currentPayments } from \"../actions/currentPayments\";\n\n//form data available in local state or store? \n//class component, local state holding \nconst PaymentNew = () => {\n\n  const [form, setForm] = useState({\n    amount: ''\n  });\n\n\tconst handlePaymentFormChange = (event, target) => {\n     setForm({\n      ...form,\n     [target]: event.target.value, \n    });\n  }\n\n\n\tconst handlePaymentFormSubmit = (event) => {\n       event.preventDefault()\n       /*const { stripe, elements } = this.props;\n  \t\tif (!stripe || !elements) {\n    \treturn;\n  \t\t}\n\n  \t\tconst card = elements.getElement(CardElement);\n  \t\tconst result = await stripe.createToken(card);\n  \t\t\tif (result.error) {\n    \tconsole.log(result.error.message);\n  \t\t\t} else {\n    \tconsole.log(result.token);\n    // pass the token to your backend API\n  \t\t\t} */\n       //add call to action \n\t}\n\n\treturn (\n\t\t<div className=\"NewPayment\">\n        <h1>New Payment</h1>\n        <form onSubmit={handlePaymentFormSubmit}>\n          <input\n            placeholder=\"amount\"\n            type=\"text\"\n            name=\"amount\"\n            autoComplete=\"on\"\n            value={form.amount}\n            onChange={(event)=> handlePaymentFormChange(event, \"amount\")}\n          /><br/>\n        <button placeholder=\"submit\" type=\"submit\">\n            Make Payment\n          </button> \n          <br></br>     \n          <br></br>             \n          <div>\n          </div>\n          </form>\n          <div>\n        </div>\n      </div>\n\t)\n}\n\n/*function InjectedCheckoutForm() {\n  return (\n    <ElementsConsumer>\n      {({ stripe, elements }) => (\n        <CheckoutForm stripe={stripe} elements={elements} />\n      )}\n    </ElementsConsumer>\n  );\n}*/\n\nconst mapStateToProps = state => {\n  return {\n    form: state.form \n  };\n};\n\nexport default withRouter(connect(mapStateToProps, { currentPayments } )(PaymentNew));\n","/Users/pamela/healthcare-payment-system/frontend/src/actions/currentPayments.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":null,"fatal":true,"severity":2,"message":"114","line":16,"column":10},{"ruleId":"110","replacedBy":"115"},{"ruleId":"112","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":3,"column":9,"nodeType":"119","messageId":"120","endLine":3,"endColumn":16},{"ruleId":"121","severity":1,"message":"122","line":14,"column":5,"nodeType":"123","messageId":"124","endLine":14,"endColumn":30},{"ruleId":"121","severity":1,"message":"125","line":16,"column":5,"nodeType":"123","messageId":"126","endLine":17,"endColumn":23},{"ruleId":"117","severity":1,"message":"127","line":6,"column":10,"nodeType":"119","messageId":"120","endLine":6,"endColumn":26},{"ruleId":"117","severity":1,"message":"128","line":6,"column":28,"nodeType":"119","messageId":"120","endLine":6,"endColumn":39},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 14 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 15 | \u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 16 | \u001b[39m\u001b[36mconst\u001b[39m \u001b[33mApp\u001b[39m \u001b[36mextends\u001b[39m \u001b[33mComponent\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 17 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 18 | \u001b[39m  componentDidMount() {\u001b[0m\n\u001b[0m \u001b[90m 19 | \u001b[39m    \u001b[36mif\u001b[39m (localStorage\u001b[33m.\u001b[39mgetItem(\u001b[32m\"loggedIn\"\u001b[39m)) {\u001b[0m",["129"],["130"],"no-unused-vars","'connect' is defined but never used.","Identifier","unusedVar","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'ElementsConsumer' is defined but never used.","'CardElement' is defined but never used.","no-global-assign","no-unsafe-negation"]